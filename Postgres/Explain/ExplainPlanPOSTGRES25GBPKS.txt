Thread 0 -> Explain plan for Query/1.sql:
('Finalize GroupAggregate  (cost=4625924.18..4625926.14 rows=6 width=236)',)
('  Group Key: l_returnflag, l_linestatus',)
('  ->  Gather Merge  (cost=4625924.18..4625925.58 rows=12 width=236)',)
('        Workers Planned: 2',)
('        ->  Sort  (cost=4624924.16..4624924.17 rows=6 width=236)',)
('              Sort Key: l_returnflag, l_linestatus',)
('              ->  Partial HashAggregate  (cost=4624923.95..4624924.08 rows=6 width=236)',)
('                    Group Key: l_returnflag, l_linestatus',)
('                    ->  Parallel Seq Scan on lineitem  (cost=0.00..2907366.92 rows=49073058 width=25)',)
("                          Filter: (l_shipdate <= '1998-08-15 00:00:00'::timestamp without time zone)",)
Thread 0 -> Explain plan for Query/2.sql:
('Limit  (cost=6817682.26..6817682.27 rows=1 width=270)',)
('  ->  Sort  (cost=6817682.26..6817682.27 rows=1 width=270)',)
('        Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey',)
('        ->  Merge Join  (cost=1884217.12..6817682.25 rows=1 width=270)',)
('              Merge Cond: (part.p_partkey = partsupp.ps_partkey)',)
('              Join Filter: (partsupp.ps_supplycost = (SubPlan 1))',)
('              ->  Gather Merge  (cost=1000.45..175119.85 rows=17504 width=30)',)
('                    Workers Planned: 2',)
('                    ->  Parallel Index Scan using part_pkey on part  (cost=0.43..172099.43 rows=7293 width=30)',)
("                          Filter: (((p_type)::text ~~ '%STEEL'::text) AND (p_size = 30))",)
('              ->  Materialize  (cost=1883206.71..1899206.71 rows=3200000 width=250)',)
('                    ->  Sort  (cost=1883206.71..1891206.71 rows=3200000 width=250)',)
('                          Sort Key: partsupp.ps_partkey',)
('                          ->  Hash Join  (cost=9464.46..771827.46 rows=3200000 width=250)',)
('                                Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)',)
('                                ->  Seq Scan on partsupp  (cost=0.00..512784.00 rows=16000000 width=14)',)
('                                ->  Hash  (cost=7635.46..7635.46 rows=40000 width=244)',)
('                                      ->  Hash Join  (cost=2.46..7635.46 rows=40000 width=244)',)
('                                            Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                                            ->  Seq Scan on supplier  (cost=0.00..6483.00 rows=200000 width=144)',)
('                                            ->  Hash  (cost=2.40..2.40 rows=5 width=108)',)
('                                                  ->  Hash Join  (cost=1.07..2.40 rows=5 width=108)',)
('                                                        Hash Cond: (nation.n_regionkey = region.r_regionkey)',)
('                                                        ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112)',)
('                                                        ->  Hash  (cost=1.06..1.06 rows=1 width=4)',)
('                                                              ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)',)
("                                                                    Filter: (r_name = 'ASIA'::bpchar)",)
('              SubPlan 1',)
('                ->  Aggregate  (cost=338.14..338.15 rows=1 width=32)',)
('                      ->  Nested Loop  (cost=1.93..338.13 rows=6 width=6)',)
('                            Join Filter: (supplier_1.s_nationkey = nation_1.n_nationkey)',)
('                            ->  Hash Join  (cost=1.07..2.40 rows=5 width=4)',)
('                                  Hash Cond: (nation_1.n_regionkey = region_1.r_regionkey)',)
('                                  ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8)',)
('                                  ->  Hash  (cost=1.06..1.06 rows=1 width=4)',)
('                                        ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4)',)
("                                              Filter: (r_name = 'ASIA'::bpchar)",)
('                            ->  Materialize  (cost=0.85..333.41 rows=32 width=10)',)
('                                  ->  Nested Loop  (cost=0.85..333.25 rows=32 width=10)',)
('                                        ->  Index Scan using partsupp_pkey on partsupp partsupp_1  (cost=0.43..63.25 rows=32 width=10)',)
('                                              Index Cond: (ps_partkey = part.p_partkey)',)
('                                        ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.42..8.44 rows=1 width=8)',)
('                                              Index Cond: (s_suppkey = partsupp_1.ps_suppkey)',)
Thread 0 -> Explain plan for Query/3.sql:
('Limit  (cost=5534930.57..5534930.60 rows=10 width=44)',)
('  ->  Sort  (cost=5534930.57..5550855.68 rows=6370041 width=44)',)
("        Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate",)
('        ->  Finalize GroupAggregate  (cost=4558953.26..5397276.28 rows=6370041 width=44)',)
('              Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority',)
('              ->  Gather Merge  (cost=4558953.26..5251296.17 rows=5308368 width=44)',)
('                    Workers Planned: 2',)
('                    ->  Partial GroupAggregate  (cost=4557953.24..4637578.76 rows=2654184 width=44)',)
('                          Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority',)
('                          ->  Sort  (cost=4557953.24..4564588.70 rows=2654184 width=24)',)
('                                Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority',)
('                                ->  Parallel Hash Join  (cost=874184.27..4165889.97 rows=2654184 width=24)',)
('                                      Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                      ->  Parallel Seq Scan on lineitem  (cost=0.00..2907366.92 rows=27177250 width=16)',)
("                                            Filter: (l_shipdate > '1995-03-13'::date)",)
('                                      ->  Parallel Hash  (cost=852963.58..852963.58 rows=1220775 width=12)',)
('                                            ->  Parallel Hash Join  (cost=92193.77..852963.58 rows=1220775 width=12)',)
('                                                  Hash Cond: (orders.o_custkey = customer.c_custkey)',)
('                                                  ->  Parallel Seq Scan on orders  (cost=0.00..685492.00 rows=5994965 width=16)',)
("                                                        Filter: (o_orderdate < '1995-03-13'::date)",)
('                                                  ->  Parallel Hash  (cost=88017.00..88017.00 rows=254542 width=4)',)
('                                                        ->  Parallel Seq Scan on customer  (cost=0.00..88017.00 rows=254542 width=4)',)
("                                                              Filter: (c_mktsegment = 'AUTOMOBILE'::bpchar)",)
Thread 0 -> Explain plan for Query/4.sql:
('Finalize GroupAggregate  (cost=3214513.57..3214565.96 rows=5 width=24)',)
('  Group Key: orders.o_orderpriority',)
('  ->  Gather Merge  (cost=3214513.57..3214565.86 rows=10 width=24)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=3213513.55..3213564.68 rows=5 width=24)',)
('              Group Key: orders.o_orderpriority',)
('              ->  Sort  (cost=3213513.55..3213530.57 rows=6811 width=16)',)
('                    Sort Key: orders.o_orderpriority',)
('                    ->  Nested Loop Semi Join  (cost=0.57..3213079.90 rows=6811 width=16)',)
('                          ->  Parallel Seq Scan on orders  (cost=0.00..716742.00 rows=476435 width=20)',)
("                                Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate < '1995-04-01 00:00:00'::timestamp without time zone))",)
('                          ->  Index Scan using lineitem_pkey on lineitem  (cost=0.57..429.09 rows=93 width=4)',)
('                                Index Cond: (l_orderkey = orders.o_orderkey)',)
('                                Filter: (l_commitdate < l_receiptdate)',)
Thread 0 -> Explain plan for Query/5.sql:
('Sort  (cost=4358571.90..4358571.96 rows=25 width=136)',)
("  Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC",)
('  ->  Finalize GroupAggregate  (cost=4357803.01..4358571.32 rows=25 width=136)',)
('        Group Key: nation.n_name',)
('        ->  Gather Merge  (cost=4357803.01..4358570.63 rows=50 width=136)',)
('              Workers Planned: 2',)
('              ->  Partial GroupAggregate  (cost=4356802.98..4357564.83 rows=25 width=136)',)
('                    Group Key: nation.n_name',)
('                    ->  Sort  (cost=4356802.98..4356955.29 rows=60923 width=116)',)
('                          Sort Key: nation.n_name',)
('                          ->  Parallel Hash Join  (cost=862512.37..4348212.72 rows=60923 width=116)',)
('                                Hash Cond: ((orders.o_custkey = customer.c_custkey) AND (supplier.s_nationkey = customer.c_nationkey))',)
('                                ->  Parallel Hash Join  (cost=753987.37..4170281.92 rows=1523199 width=128)',)
('                                      Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                      ->  Parallel Hash Join  (cost=6006.30..3017536.04 rows=9999551 width=128)',)
('                                            Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)',)
('                                            ->  Parallel Seq Scan on lineitem  (cost=0.00..2782372.53 rows=49997753 width=20)',)
('                                            ->  Parallel Hash  (cost=5797.97..5797.97 rows=16667 width=116)',)
('                                                  ->  Hash Join  (cost=2.46..5797.97 rows=16667 width=116)',)
('                                                        Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                                                        ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=8)',)
('                                                        ->  Hash  (cost=2.40..2.40 rows=5 width=108)',)
('                                                              ->  Hash Join  (cost=1.07..2.40 rows=5 width=108)',)
('                                                                    Hash Cond: (nation.n_regionkey = region.r_regionkey)',)
('                                                                    ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112)',)
('                                                                    ->  Hash  (cost=1.06..1.06 rows=1 width=4)',)
('                                                                          ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)',)
("                                                                                Filter: (r_name = 'MIDDLE EAST'::bpchar)",)
('                                      ->  Parallel Hash  (cost=716742.00..716742.00 rows=1904085 width=8)',)
('                                            ->  Parallel Seq Scan on orders  (cost=0.00..716742.00 rows=1904085 width=8)',)
("                                                  Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))",)
('                                ->  Parallel Hash  (cost=84892.00..84892.00 rows=1250000 width=8)',)
('                                      ->  Parallel Seq Scan on customer  (cost=0.00..84892.00 rows=1250000 width=8)',)
Thread 0 -> Explain plan for Query/6.sql:
('Finalize Aggregate  (cost=3412884.53..3412884.54 rows=1 width=32)',)
('  ->  Gather  (cost=3412884.31..3412884.52 rows=2 width=32)',)
('        Workers Planned: 2',)
('        ->  Partial Aggregate  (cost=3411884.31..3411884.32 rows=1 width=32)',)
('              ->  Parallel Seq Scan on lineitem  (cost=0.00..3407344.45 rows=907972 width=12)',)
("                    Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.05) AND (l_discount <= 0.07) AND (l_quantity < '24'::numeric))",)
Thread 0 -> Explain plan for Query/7.sql:
('Finalize GroupAggregate  (cost=4103606.13..4107362.37 rows=10044 width=272)',)
('  Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))',)
('  ->  Gather Merge  (cost=4103606.13..4106960.61 rows=20088 width=272)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=4102606.11..4103641.93 rows=10044 width=272)',)
('              Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))',)
('              ->  Sort  (cost=4102606.11..4102732.56 rows=50581 width=252)',)
('                    Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))',)
('                    ->  Parallel Hash Join  (cost=931003.47..4092602.64 rows=50581 width=252)',)
('                          Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
("                          Join Filter: (((n1.n_name = 'JAPAN'::bpchar) AND (n2.n_name = 'INDIA'::bpchar)) OR ((n1.n_name = 'INDIA'::bpchar) AND (n2.n_name = 'JAPAN'::bpchar)))",)
('                          ->  Parallel Hash Join  (cost=5656.90..3100055.51 rows=1215420 width=124)',)
('                                Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)',)
('                                ->  Parallel Seq Scan on lineitem  (cost=0.00..3032361.30 rows=15192749 width=24)',)
("                                      Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))",)
('                                ->  Parallel Hash  (cost=5573.56..5573.56 rows=6667 width=108)',)
('                                      ->  Hash Join  (cost=1.40..5573.56 rows=6667 width=108)',)
('                                            Hash Cond: (supplier.s_nationkey = n1.n_nationkey)',)
('                                            ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=8)',)
('                                            ->  Hash  (cost=1.38..1.38 rows=2 width=108)',)
('                                                  ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108)',)
("                                                        Filter: ((n_name = 'JAPAN'::bpchar) OR (n_name = 'INDIA'::bpchar))",)
('                          ->  Parallel Hash  (cost=896244.57..896244.57 rows=1000000 width=108)',)
('                                ->  Parallel Hash Join  (cost=91641.90..896244.57 rows=1000000 width=108)',)
('                                      Hash Cond: (orders.o_custkey = customer.c_custkey)',)
('                                      ->  Parallel Seq Scan on orders  (cost=0.00..654242.00 rows=12500000 width=8)',)
('                                      ->  Parallel Hash  (cost=88730.90..88730.90 rows=100000 width=108)',)
('                                            ->  Hash Join  (cost=1.40..88730.90 rows=100000 width=108)',)
('                                                  Hash Cond: (customer.c_nationkey = n2.n_nationkey)',)
('                                                  ->  Parallel Seq Scan on customer  (cost=0.00..84892.00 rows=1250000 width=8)',)
('                                                  ->  Hash  (cost=1.38..1.38 rows=2 width=108)',)
('                                                        ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108)',)
("                                                              Filter: ((n_name = 'INDIA'::bpchar) OR (n_name = 'JAPAN'::bpchar))",)
Thread 0 -> Explain plan for Query/8.sql:
('Finalize GroupAggregate  (cost=3901024.14..3902189.36 rows=2406 width=64)',)
('  Group Key: (EXTRACT(year FROM orders.o_orderdate))',)
('  ->  Gather Merge  (cost=3901024.14..3902081.09 rows=4812 width=96)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=3900024.11..3900525.65 rows=2406 width=96)',)
('              Group Key: (EXTRACT(year FROM orders.o_orderdate))',)
('              ->  Sort  (cost=3900024.11..3900075.16 rows=20419 width=148)',)
('                    Sort Key: (EXTRACT(year FROM orders.o_orderdate))',)
('                    ->  Hash Join  (cost=3892734.71..3898562.35 rows=20419 width=148)',)
('                          Hash Cond: (supplier.s_nationkey = n2.n_nationkey)',)
('                          ->  Parallel Hash Join  (cost=3892733.14..3898447.06 rows=20419 width=20)',)
('                                Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)',)
('                                ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=8)',)
('                                ->  Parallel Hash  (cost=3892477.91..3892477.91 rows=20419 width=20)',)
('                                      ->  Parallel Hash Join  (cost=3796822.83..3892477.91 rows=20419 width=20)',)
('                                            Hash Cond: (customer.c_custkey = orders.o_custkey)',)
('                                            ->  Hash Join  (cost=2.46..92081.96 rows=250000 width=4)',)
('                                                  Hash Cond: (customer.c_nationkey = n1.n_nationkey)',)
('                                                  ->  Parallel Seq Scan on customer  (cost=0.00..84892.00 rows=1250000 width=8)',)
('                                                  ->  Hash  (cost=2.40..2.40 rows=5 width=4)',)
('                                                        ->  Hash Join  (cost=1.07..2.40 rows=5 width=4)',)
('                                                              Hash Cond: (n1.n_regionkey = region.r_regionkey)',)
('                                                              ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)',)
('                                                              ->  Hash  (cost=1.06..1.06 rows=1 width=4)',)
('                                                                    ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)',)
("                                                                          Filter: (r_name = 'ASIA'::bpchar)",)
('                                            ->  Parallel Hash  (cost=3794945.19..3794945.19 rows=102094 width=24)',)
('                                                  ->  Parallel Hash Join  (cost=3023903.66..3794945.19 rows=102094 width=24)',)
('                                                        Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)',)
('                                                        ->  Parallel Seq Scan on orders  (cost=0.00..716742.00 rows=3841902 width=12)',)
("                                                              Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))",)
('                                                        ->  Parallel Hash  (cost=3017804.51..3017804.51 rows=332172 width=20)',)
('                                                              ->  Parallel Hash Join  (cost=104187.75..3017804.51 rows=332172 width=20)',)
('                                                                    Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('                                                                    ->  Parallel Seq Scan on lineitem  (cost=0.00..2782372.53 rows=49997753 width=24)',)
('                                                                    ->  Parallel Hash  (cost=104049.33..104049.33 rows=11073 width=4)',)
('                                                                          ->  Parallel Seq Scan on part  (cost=0.00..104049.33 rows=11073 width=4)',)
("                                                                                Filter: ((p_type)::text = 'SMALL PLATED COPPER'::text)",)
('                          ->  Hash  (cost=1.25..1.25 rows=25 width=108)',)
('                                ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108)',)
Thread 0 -> Explain plan for Query/9.sql:
('Finalize GroupAggregate  (cost=6768170.84..6784312.07 rows=60150 width=168)',)
('  Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))',)
('  ->  Gather Merge  (cost=6768170.84..6782206.82 rows=120300 width=168)',)
('        Workers Planned: 2',)
('        ->  Sort  (cost=6767170.81..6767321.19 rows=60150 width=168)',)
('              Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC',)
('              ->  Partial HashAggregate  (cost=6529691.04..6757461.02 rows=60150 width=168)',)
('                    Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)',)
('                    Planned Partitions: 8',)
('                    ->  Hash Join  (cost=1524495.94..5432834.87 rows=5050273 width=159)',)
('                          Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                          ->  Parallel Hash Join  (cost=1524494.38..5404703.29 rows=5050273 width=31)',)
('                                Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                ->  Parallel Hash Join  (cost=665173.38..4414248.32 rows=5050273 width=31)',)
('                                      Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)',)
('                                      ->  Parallel Hash Join  (cost=658815.38..4394633.08 rows=5050273 width=35)',)
('                                            Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))',)
('                                            ->  Parallel Hash Join  (cost=106811.71..3704650.48 rows=5050273 width=33)',)
('                                                  Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('                                                  ->  Parallel Seq Scan on lineitem  (cost=0.00..2782372.53 rows=49997753 width=29)',)
('                                                  ->  Parallel Hash  (cost=104049.33..104049.33 rows=168350 width=4)',)
('                                                        ->  Parallel Seq Scan on part  (cost=0.00..104049.33 rows=168350 width=4)',)
("                                                              Filter: ((p_name)::text ~~ '%dim%'::text)",)
('                                            ->  Parallel Hash  (cost=419450.67..419450.67 rows=6666667 width=14)',)
('                                                  ->  Parallel Seq Scan on partsupp  (cost=0.00..419450.67 rows=6666667 width=14)',)
('                                      ->  Parallel Hash  (cost=5316.33..5316.33 rows=83333 width=8)',)
('                                            ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=8)',)
('                                ->  Parallel Hash  (cost=654242.00..654242.00 rows=12500000 width=8)',)
('                                      ->  Parallel Seq Scan on orders  (cost=0.00..654242.00 rows=12500000 width=8)',)
('                          ->  Hash  (cost=1.25..1.25 rows=25 width=108)',)
('                                ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108)',)
Thread 0 -> Explain plan for Query/10.sql:
('Limit  (cost=4260476.69..4260476.74 rows=20 width=280)',)
('  ->  Sort  (cost=4260476.69..4263132.31 rows=1062250 width=280)',)
("        Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC",)
('        ->  GroupAggregate  (cost=3837055.04..4232210.60 rows=1062250 width=280)',)
('              Group Key: customer.c_custkey, nation.n_name',)
('              ->  Incremental Sort  (cost=3837055.04..4205654.35 rows=1062250 width=260)',)
('                    Sort Key: customer.c_custkey, nation.n_name',)
('                    Presorted Key: customer.c_custkey',)
('                    ->  Nested Loop  (cost=3837054.73..4157853.10 rows=1062250 width=260)',)
('                          ->  Merge Join  (cost=3837054.58..4131831.01 rows=1062250 width=160)',)
('                                Merge Cond: (orders.o_custkey = customer.c_custkey)',)
('                                ->  Gather Merge  (cost=3837041.54..3960758.06 rows=1062250 width=16)',)
('                                      Workers Planned: 2',)
('                                      ->  Sort  (cost=3836041.52..3837148.03 rows=442604 width=16)',)
('                                            Sort Key: orders.o_custkey',)
('                                            ->  Parallel Hash Join  (cost=724055.43..3786967.88 rows=442604 width=16)',)
('                                                  Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                                  ->  Parallel Seq Scan on lineitem  (cost=0.00..2907366.92 rows=12412775 width=16)',)
("                                                        Filter: (l_returnflag = 'R'::bpchar)",)
('                                                  ->  Parallel Hash  (cost=716742.00..716742.00 rows=445714 width=8)',)
('                                                        ->  Parallel Seq Scan on orders  (cost=0.00..716742.00 rows=445714 width=8)',)
("                                                              Filter: ((o_orderdate >= '1993-08-01'::date) AND (o_orderdate < '1993-11-01 00:00:00'::timestamp without time zone))",)
('                                ->  Index Scan using customer_pkey on customer  (cost=0.43..150307.43 rows=3000000 width=148)',)
('                          ->  Memoize  (cost=0.15..2.17 rows=1 width=108)',)
('                                Cache Key: customer.c_nationkey',)
('                                ->  Index Scan using nation_pkey on nation  (cost=0.14..2.16 rows=1 width=108)',)
('                                      Index Cond: (n_nationkey = customer.c_nationkey)',)
Thread 0 -> Explain plan for Query/11.sql:
('Sort  (cost=1033585.57..1034000.67 rows=166041 width=36)',)
('  Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC',)
('  InitPlan 1 (returns $1)',)
('    ->  Finalize Aggregate  (cost=454177.05..454177.06 rows=1 width=32)',)
('          ->  Gather  (cost=454176.82..454177.03 rows=2 width=32)',)
('                Workers Planned: 2',)
('                ->  Partial Aggregate  (cost=453176.82..453176.83 rows=1 width=32)',)
('                      ->  Parallel Hash Join  (cost=5615.15..451176.82 rows=266667 width=10)',)
('                            Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)',)
('                            ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..419450.67 rows=6666667 width=14)',)
('                            ->  Parallel Hash  (cost=5573.49..5573.49 rows=3333 width=4)',)
('                                  ->  Hash Join  (cost=1.32..5573.49 rows=3333 width=4)',)
('                                        Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)',)
('                                        ->  Parallel Seq Scan on supplier supplier_1  (cost=0.00..5316.33 rows=83333 width=8)',)
('                                        ->  Hash  (cost=1.31..1.31 rows=1 width=4)',)
('                                              ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4)',)
("                                                    Filter: (n_name = 'MOZAMBIQUE'::bpchar)",)
('  ->  Finalize GroupAggregate  (cost=480770.28..560468.78 rows=166041 width=36)',)
('        Group Key: partsupp.ps_partkey',)
('        Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)',)
('        ->  Gather Merge  (cost=480770.28..548996.93 rows=533334 width=36)',)
('              Workers Planned: 2',)
('              ->  Partial GroupAggregate  (cost=479770.25..486436.93 rows=266667 width=36)',)
('                    Group Key: partsupp.ps_partkey',)
('                    ->  Sort  (cost=479770.25..480436.92 rows=266667 width=14)',)
('                          Sort Key: partsupp.ps_partkey',)
('                          ->  Parallel Hash Join  (cost=5615.15..451176.82 rows=266667 width=14)',)
('                                Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)',)
('                                ->  Parallel Seq Scan on partsupp  (cost=0.00..419450.67 rows=6666667 width=18)',)
('                                ->  Parallel Hash  (cost=5573.49..5573.49 rows=3333 width=4)',)
('                                      ->  Hash Join  (cost=1.32..5573.49 rows=3333 width=4)',)
('                                            Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                                            ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=8)',)
('                                            ->  Hash  (cost=1.31..1.31 rows=1 width=4)',)
('                                                  ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)',)
("                                                        Filter: (n_name = 'MOZAMBIQUE'::bpchar)",)
Thread 0 -> Explain plan for Query/12.sql:
('Finalize GroupAggregate  (cost=4396125.41..4401022.91 rows=7 width=27)',)
('  Group Key: lineitem.l_shipmode',)
('  ->  Gather Merge  (cost=4396125.41..4401022.73 rows=14 width=27)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=4395125.38..4400021.09 rows=7 width=27)',)
('              Group Key: lineitem.l_shipmode',)
('              ->  Sort  (cost=4395125.38..4395737.34 rows=244782 width=27)',)
('                    Sort Key: lineitem.l_shipmode',)
('                    ->  Parallel Hash Join  (cost=883735.00..4367357.00 rows=244782 width=27)',)
('                          Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                          ->  Parallel Seq Scan on lineitem  (cost=0.00..3407344.45 rows=244782 width=15)',)
("                                Filter: ((l_shipmode = ANY ('{RAIL,FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1997-01-01'::date) AND (l_receiptdate < '1998-01-01 00:00:00'::timestamp without time zone))",)
('                          ->  Parallel Hash  (cost=654242.00..654242.00 rows=12500000 width=20)',)
('                                ->  Parallel Seq Scan on orders  (cost=0.00..654242.00 rows=12500000 width=20)',)
Thread 0 -> Explain plan for Query/13.sql:
('Sort  (cost=3022115.38..3022115.88 rows=200 width=16)',)
('  Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC',)
('  ->  HashAggregate  (cost=3022105.74..3022107.74 rows=200 width=16)',)
('        Group Key: count(orders.o_orderkey)',)
('        ->  Finalize HashAggregate  (cost=2888511.99..2977105.74 rows=3000000 width=12)',)
('              Group Key: customer.c_custkey',)
('              Planned Partitions: 128',)
('              ->  Gather  (cost=1777467.16..2504136.99 rows=6000000 width=12)',)
('                    Workers Planned: 2',)
('                    ->  Partial HashAggregate  (cost=1776467.16..1903136.99 rows=3000000 width=12)',)
('                          Group Key: customer.c_custkey',)
('                          Planned Partitions: 128',)
('                          ->  Parallel Hash Left Join  (cost=888499.16..1080444.40 rows=12373738 width=8)',)
('                                Hash Cond: (customer.c_custkey = orders.o_custkey)',)
('                                ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..60412.43 rows=1250000 width=4)',)
('                                ->  Parallel Hash  (cost=685492.00..685492.00 rows=12373738 width=8)',)
('                                      ->  Parallel Seq Scan on orders  (cost=0.00..685492.00 rows=12373738 width=8)',)
("                                            Filter: ((o_comment)::text !~~ '%pending%deposits%'::text)",)
Thread 0 -> Explain plan for Query/14.sql:
('Finalize Aggregate  (cost=3196221.49..3196221.50 rows=1 width=32)',)
('  ->  Gather  (cost=3196221.25..3196221.46 rows=2 width=64)',)
('        Workers Planned: 2',)
('        ->  Partial Aggregate  (cost=3195221.25..3195221.26 rows=1 width=64)',)
('              ->  Parallel Hash Join  (cost=132110.00..3183889.12 rows=647550 width=33)',)
('                    Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('                    ->  Parallel Seq Scan on lineitem  (cost=0.00..3032361.30 rows=647550 width=16)',)
("                          Filter: ((l_shipdate >= '1996-12-01'::date) AND (l_shipdate < '1997-01-01 00:00:00'::timestamp without time zone))",)
('                    ->  Parallel Hash  (cost=99882.67..99882.67 rows=1666667 width=25)',)
('                          ->  Parallel Seq Scan on part  (cost=0.00..99882.67 rows=1666667 width=25)',)
Thread 0 -> Explain plan for Query/16.sql:
('Sort  (cost=749787.69..750241.87 rows=181672 width=44)',)
('  Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size',)
('  ->  GroupAggregate  (cost=574591.14..728328.25 rows=181672 width=44)',)
('        Group Key: part.p_brand, part.p_type, part.p_size',)
('        ->  Gather Merge  (cost=574591.14..714498.83 rows=1201270 width=40)',)
('              Workers Planned: 2',)
('              ->  Sort  (cost=573591.12..574842.44 rows=500529 width=40)',)
('                    Sort Key: part.p_brand, part.p_type, part.p_size',)
('                    ->  Parallel Hash Join  (cost=136950.46..512519.81 rows=500529 width=40)',)
('                          Hash Cond: (partsupp.ps_partkey = part.p_partkey)',)
('                          ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=6983.49..345804.82 rows=3333333 width=8)',)
('                                Filter: (NOT (hashed SubPlan 1))',)
('                                SubPlan 1',)
('                                  ->  Seq Scan on supplier  (cost=0.00..6983.00 rows=20 width=4)',)
("                                        Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)",)
('                          ->  Parallel Hash  (cost=124882.67..124882.67 rows=250265 width=40)',)
('                                ->  Parallel Seq Scan on part  (cost=0.00..124882.67 rows=250265 width=40)',)
("                                      Filter: ((p_brand <> 'Brand#34'::bpchar) AND ((p_type)::text !~~ 'LARGE BRUSHED%'::text) AND (p_size = ANY ('{48,19,12,4,41,7,21,39}'::integer[])))",)
Thread 0 -> Explain plan for Query/17.sql:
('Aggregate  (cost=41730396.21..41730396.22 rows=1 width=32)',)
('  ->  Hash Join  (cost=109687.38..41730291.46 rows=41898 width=8)',)
('        Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('        Join Filter: (lineitem.l_quantity < (SubPlan 1))',)
('        ->  Seq Scan on lineitem  (cost=0.00..3482341.08 rows=119994608 width=17)',)
('        ->  Hash  (cost=109635.00..109635.00 rows=4190 width=4)',)
('              ->  Gather  (cost=1000.00..109635.00 rows=4190 width=4)',)
('                    Workers Planned: 2',)
('                    ->  Parallel Seq Scan on part  (cost=0.00..108216.00 rows=1746 width=4)',)
("                          Filter: ((p_brand = 'Brand#44'::bpchar) AND (p_container = 'WRAP PKG'::bpchar))",)
('        SubPlan 1',)
('          ->  Aggregate  (cost=3782327.69..3782327.70 rows=1 width=32)',)
('                ->  Seq Scan on lineitem lineitem_1  (cost=0.00..3782327.60 rows=35 width=5)',)
('                      Filter: (l_partkey = part.p_partkey)',)
Thread 0 -> Explain plan for Query/18.sql:
('Limit  (cost=13121088.49..13121088.74 rows=100 width=71)',)
('  ->  Sort  (cost=13121088.49..13122518.02 rows=571814 width=71)',)
('        Sort Key: orders.o_totalprice DESC, orders.o_orderdate',)
('        ->  GroupAggregate  (cost=12894253.53..13099234.17 rows=571814 width=71)',)
('              Group Key: customer.c_custkey, orders.o_orderkey',)
('              ->  Incremental Sort  (cost=12894253.53..13087797.89 rows=571814 width=44)',)
('                    Sort Key: customer.c_custkey, orders.o_orderkey',)
('                    Presorted Key: customer.c_custkey',)
('                    ->  Merge Join  (cost=12894253.22..13062066.26 rows=571814 width=44)',)
('                          Merge Cond: (customer.c_custkey = orders.o_custkey)',)
('                          ->  Index Scan using customer_pkey on customer  (cost=0.43..150307.43 rows=3000000 width=23)',)
('                          ->  Materialize  (cost=12894252.51..12897111.58 rows=571814 width=25)',)
('                                ->  Sort  (cost=12894252.51..12895682.04 rows=571814 width=25)',)
('                                      Sort Key: orders.o_custkey',)
('                                      ->  Hash Join  (cost=7715189.76..12825890.76 rows=571814 width=25)',)
('                                            Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                            ->  Seq Scan on lineitem  (cost=0.00..3482341.08 rows=119994608 width=9)',)
('                                            ->  Hash  (cost=7712564.76..7712564.76 rows=142960 width=24)',)
('                                                  ->  Nested Loop  (cost=6531825.28..7712564.76 rows=142960 width=24)',)
('                                                        ->  Finalize GroupAggregate  (cost=6531824.71..6644770.36 rows=142960 width=4)',)
('                                                              Group Key: lineitem_1.l_orderkey',)
("                                                              Filter: (sum(lineitem_1.l_quantity) > '314'::numeric)",)
('                                                              ->  Gather Merge  (cost=6531824.71..6631903.93 rows=857762 width=36)',)
('                                                                    Workers Planned: 2',)
('                                                                    ->  Sort  (cost=6530824.69..6531896.89 rows=428881 width=36)',)
('                                                                          Sort Key: lineitem_1.l_orderkey',)
('                                                                          ->  Partial HashAggregate  (cost=5985353.58..6478973.90 rows=428881 width=36)',)
('                                                                                Group Key: lineitem_1.l_orderkey',)
('                                                                                Planned Partitions: 64',)
('                                                                                ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..2782372.53 rows=49997753 width=9)',)
('                                                        ->  Index Scan using orders_pkey on orders  (cost=0.56..7.46 rows=1 width=20)',)
('                                                              Index Cond: (o_orderkey = lineitem_1.l_orderkey)',)
Thread 0 -> Explain plan for Query/19.sql:
('Finalize Aggregate  (cost=3939893.09..3939893.10 rows=1 width=32)',)
('  ->  Gather  (cost=3939892.86..3939893.07 rows=2 width=32)',)
('        Workers Planned: 2',)
('        ->  Partial Aggregate  (cost=3938892.86..3938892.87 rows=1 width=32)',)
('              ->  Parallel Hash Join  (cost=154099.23..3938885.82 rows=939 width=12)',)
('                    Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('                    Join Filter: (((part.p_brand = \'Brand#52\'::bpchar) AND (part.p_container = ANY (\'{"SM CASE","SM BOX","SM PACK","SM PKG"}\'::bpchar[])) AND (lineitem.l_quantity >= \'4\'::numeric) AND (lineitem.l_quantity <= \'14\'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = \'Brand#11\'::bpchar) AND (part.p_container = ANY (\'{"MED BAG","MED BOX","MED PKG","MED PACK"}\'::bpchar[])) AND (lineitem.l_quantity >= \'18\'::numeric) AND (lineitem.l_quantity <= \'28\'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = \'Brand#51\'::bpchar) AND (part.p_container = ANY (\'{"LG CASE","LG BOX","LG PACK","LG PKG"}\'::bpchar[])) AND (lineitem.l_quantity >= \'29\'::numeric) AND (lineitem.l_quantity <= \'39\'::numeric) AND (part.p_size <= 15)))',)
('                    ->  Parallel Seq Scan on lineitem  (cost=0.00..3782327.60 rows=936756 width=21)',)
('                          Filter: ((l_shipmode = ANY (\'{AIR,"AIR REG"}\'::bpchar[])) AND (l_shipinstruct = \'DELIVER IN PERSON\'::bpchar) AND (((l_quantity >= \'4\'::numeric) AND (l_quantity <= \'14\'::numeric)) OR ((l_quantity >= \'18\'::numeric) AND (l_quantity <= \'28\'::numeric)) OR ((l_quantity >= \'29\'::numeric) AND (l_quantity <= \'39\'::numeric))))',)
('                    ->  Parallel Hash  (cost=154049.33..154049.33 rows=3992 width=30)',)
('                          ->  Parallel Seq Scan on part  (cost=0.00..154049.33 rows=3992 width=30)',)
('                                Filter: ((p_size >= 1) AND (((p_brand = \'Brand#52\'::bpchar) AND (p_container = ANY (\'{"SM CASE","SM BOX","SM PACK","SM PKG"}\'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = \'Brand#11\'::bpchar) AND (p_container = ANY (\'{"MED BAG","MED BOX","MED PKG","MED PACK"}\'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = \'Brand#51\'::bpchar) AND (p_container = ANY (\'{"LG CASE","LG BOX","LG PACK","LG PKG"}\'::bpchar[])) AND (p_size <= 15))))',)
Thread 0 -> Explain plan for Query/20.sql:
('Nested Loop Semi Join  (cost=6769.40..3072540576687.95 rows=2155 width=51)',)
('  ->  Gather Merge  (cost=6768.53..7700.27 rows=8000 width=55)',)
('        Workers Planned: 2',)
('        ->  Sort  (cost=5768.51..5776.84 rows=3333 width=55)',)
('              Sort Key: supplier.s_name',)
('              ->  Hash Join  (cost=1.32..5573.49 rows=3333 width=55)',)
('                    Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                    ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=59)',)
('                    ->  Hash  (cost=1.31..1.31 rows=1 width=4)',)
('                          ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)',)
("                                Filter: (n_name = 'ALGERIA'::bpchar)",)
('  ->  Nested Loop  (cost=0.86..384067571.11 rows=1 width=4)',)
('        ->  Index Scan using partsupp_pkey on partsupp  (cost=0.43..384067557.06 rows=27 width=8)',)
('              Index Cond: (ps_suppkey = supplier.s_suppkey)',)
('              Filter: ((ps_availqty)::numeric > (SubPlan 1))',)
('              SubPlan 1',)
('                ->  Aggregate  (cost=4682287.17..4682287.18 rows=1 width=32)',)
('                      ->  Seq Scan on lineitem  (cost=0.00..4682287.16 rows=1 width=5)',)
("                            Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))",)
('        ->  Index Scan using part_pkey on part  (cost=0.43..0.52 rows=1 width=4)',)
('              Index Cond: (p_partkey = partsupp.ps_partkey)',)
("              Filter: ((p_name)::text ~~ 'green%'::text)",)
Thread 0 -> Explain plan for Query/21.sql:
('Limit  (cost=6239390.05..6239390.06 rows=1 width=34)',)
('  ->  Sort  (cost=6239390.05..6239390.06 rows=1 width=34)',)
('        Sort Key: (count(*)) DESC, supplier.s_name',)
('        ->  GroupAggregate  (cost=6239390.02..6239390.04 rows=1 width=34)',)
('              Group Key: supplier.s_name',)
('              ->  Sort  (cost=6239390.02..6239390.03 rows=1 width=26)',)
('                    Sort Key: supplier.s_name',)
('                    ->  Nested Loop  (cost=3187409.17..6239390.01 rows=1 width=26)',)
('                          ->  Nested Loop Semi Join  (cost=3187408.61..6239381.99 rows=1 width=34)',)
('                                ->  Gather  (cost=3187408.04..6238902.82 rows=1 width=34)',)
('                                      Workers Planned: 2',)
('                                      ->  Parallel Hash Anti Join  (cost=3186408.04..6237902.72 rows=1 width=34)',)
('                                            Hash Cond: (l1.l_orderkey = l3.l_orderkey)',)
('                                            Join Filter: (l3.l_suppkey <> l1.l_suppkey)',)
('                                            ->  Parallel Hash Join  (cost=5615.15..2978256.64 rows=666637 width=34)',)
('                                                  Hash Cond: (l1.l_suppkey = supplier.s_suppkey)',)
('                                                  ->  Parallel Seq Scan on lineitem l1  (cost=0.00..2907366.92 rows=16665918 width=8)',)
('                                                        Filter: (l_receiptdate > l_commitdate)',)
('                                                  ->  Parallel Hash  (cost=5573.49..5573.49 rows=3333 width=30)',)
('                                                        ->  Hash Join  (cost=1.32..5573.49 rows=3333 width=30)',)
('                                                              Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                                                              ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=34)',)
('                                                              ->  Hash  (cost=1.31..1.31 rows=1 width=4)',)
('                                                                    ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)',)
("                                                                          Filter: (n_name = 'EGYPT'::bpchar)",)
('                                            ->  Parallel Hash  (cost=2907366.92..2907366.92 rows=16665918 width=8)',)
('                                                  ->  Parallel Seq Scan on lineitem l3  (cost=0.00..2907366.92 rows=16665918 width=8)',)
('                                                        Filter: (l_receiptdate > l_commitdate)',)
('                                ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.57..479.16 rows=280 width=8)',)
('                                      Index Cond: (l_orderkey = l1.l_orderkey)',)
('                                      Filter: (l_suppkey <> l1.l_suppkey)',)
('                          ->  Index Scan using orders_pkey on orders  (cost=0.56..8.02 rows=1 width=4)',)
('                                Index Cond: (o_orderkey = l1.l_orderkey)',)
("                                Filter: (o_orderstatus = 'F'::bpchar)",)
Thread 0 -> Explain plan for Query/22.sql:
('Finalize GroupAggregate  (cost=1121403.16..1123439.96 rows=15260 width=72)',)
('  Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))',)
('  InitPlan 1 (returns $1)',)
('    ->  Finalize Aggregate  (cost=106304.07..106304.08 rows=1 width=32)',)
('          ->  Gather  (cost=106303.85..106304.06 rows=2 width=32)',)
('                Workers Planned: 2',)
('                ->  Partial Aggregate  (cost=105303.85..105303.86 rows=1 width=32)',)
('                      ->  Parallel Seq Scan on customer customer_1  (cost=0.00..105204.50 rows=39740 width=6)',)
("                            Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{20,40,22,30,39,42,21}'::text[])))",)
('  ->  Gather Merge  (cost=1015099.07..1016741.66 rows=12716 width=72)',)
('        Workers Planned: 2',)
('        Params Evaluated: $1',)
('        ->  Partial GroupAggregate  (cost=1014099.05..1014273.89 rows=6358 width=72)',)
('              Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))',)
('              ->  Sort  (cost=1014099.05..1014114.94 rows=6358 width=38)',)
('                    Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))',)
('                    ->  Parallel Hash Anti Join  (cost=859321.00..1013697.40 rows=6358 width=38)',)
('                          Hash Cond: (customer.c_custkey = orders.o_custkey)',)
('                          ->  Parallel Seq Scan on customer  (cost=0.00..105204.50 rows=14583 width=26)',)
("                                Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{20,40,22,30,39,42,21}'::text[])))",)
('                          ->  Parallel Hash  (cost=654242.00..654242.00 rows=12500000 width=4)',)
('                                ->  Parallel Seq Scan on orders  (cost=0.00..654242.00 rows=12500000 width=4)',)
