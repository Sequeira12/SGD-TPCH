Thread 0 -> Explain plan for Query/1.sql:
('Finalize GroupAggregate  (cost=12215853.27..12228887.25 rows=40000 width=248)',)
('  Group Key: l_returnflag, l_linestatus',)
('  ->  Gather Merge  (cost=12215853.27..12225187.25 rows=80000 width=248)',)
('        Workers Planned: 2',)
('        ->  Sort  (cost=12214853.24..12214953.24 rows=40000 width=248)',)
('              Sort Key: l_returnflag, l_linestatus',)
('              ->  Partial HashAggregate  (cost=11294739.20..12207144.20 rows=40000 width=248)',)
('                    Group Key: l_returnflag, l_linestatus',)
('                    Planned Partitions: 16',)
('                    ->  Parallel Seq Scan on lineitem  (cost=0.00..5815292.00 rows=33335040 width=88)',)
("                          Filter: (l_shipdate <= '1998-08-15 00:00:00'::timestamp without time zone)",)
Thread 0 -> Explain plan for Query/2.sql:
('Limit  (cost=5212217.47..5212217.47 rows=1 width=270)',)
('  ->  Sort  (cost=5212217.47..5212217.47 rows=1 width=270)',)
('        Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey',)
('        ->  Merge Join  (cost=1452298.10..5212217.46 rows=1 width=270)',)
('              Merge Cond: (part.p_partkey = partsupp.ps_partkey)',)
('              Join Filter: (partsupp.ps_supplycost = (SubPlan 1))',)
('              ->  Gather Merge  (cost=1000.46..348819.26 rows=31508 width=30)',)
('                    Workers Planned: 2',)
('                    ->  Parallel Index Scan using part_pkey on part  (cost=0.43..344182.43 rows=13128 width=30)',)
("                          Filter: (((p_type)::text ~~ '%STEEL'::text) AND (p_size = 30))",)
('              ->  Materialize  (cost=1451297.31..1457514.99 rows=1243536 width=250)',)
('                    ->  Sort  (cost=1451297.31..1454406.15 rows=1243536 width=250)',)
('                          Sort Key: partsupp.ps_partkey',)
('                          ->  Gather  (cost=12412.09..1027886.05 rows=1243536 width=250)',)
('                                Workers Planned: 2',)
('                                ->  Parallel Hash Join  (cost=11412.09..902532.45 rows=518140 width=250)',)
('                                      Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)',)
('                                      ->  Parallel Seq Scan on partsupp  (cost=0.00..838961.33 rows=13333333 width=14)',)
('                                      ->  Parallel Hash  (cost=11328.75..11328.75 rows=6667 width=244)',)
('                                            ->  Hash Join  (cost=2.41..11328.75 rows=6667 width=244)',)
('                                                  Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                                                  ->  Parallel Seq Scan on supplier  (cost=0.00..10634.67 rows=166667 width=144)',)
('                                                  ->  Hash  (cost=2.40..2.40 rows=1 width=108)',)
('                                                        ->  Hash Join  (cost=1.07..2.40 rows=1 width=108)',)
('                                                              Hash Cond: (nation.n_regionkey = region.r_regionkey)',)
('                                                              ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112)',)
('                                                              ->  Hash  (cost=1.06..1.06 rows=1 width=4)',)
('                                                                    ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)',)
("                                                                          Filter: (r_name = 'ASIA'::bpchar)",)
('              SubPlan 1',)
('                ->  Aggregate  (cost=694.69..694.70 rows=1 width=32)',)
('                      ->  Nested Loop  (cost=1.13..694.68 rows=3 width=6)',)
('                            Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)',)
('                            ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4)',)
("                                  Filter: (r_name = 'ASIA'::bpchar)",)
('                            ->  Nested Loop  (cost=1.13..692.81 rows=65 width=10)',)
('                                  ->  Nested Loop  (cost=0.98..687.28 rows=65 width=10)',)
('                                        ->  Index Scan using partsupp_pkey on partsupp partsupp_1  (cost=0.56..125.80 rows=67 width=10)',)
('                                              Index Cond: (ps_partkey = part.p_partkey)',)
('                                        ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.42..8.38 rows=1 width=8)',)
('                                              Index Cond: (s_suppkey = partsupp_1.ps_suppkey)',)
('                                  ->  Memoize  (cost=0.15..0.17 rows=1 width=8)',)
('                                        Cache Key: supplier_1.s_nationkey',)
('                                        ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8)',)
('                                              Index Cond: (n_nationkey = supplier_1.s_nationkey)',)
Thread 0 -> Explain plan for Query/3.sql:
('Limit  (cost=9412057.21..9412057.24 rows=10 width=44)',)
('  ->  Sort  (cost=9412057.21..9425531.23 rows=5389609 width=44)',)
("        Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate",)
('        ->  Finalize GroupAggregate  (cost=8586295.66..9295589.70 rows=5389609 width=44)',)
('              Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority',)
('              ->  Gather Merge  (cost=8586295.66..9172077.83 rows=4491340 width=44)',)
('                    Workers Planned: 2',)
('                    ->  Partial GroupAggregate  (cost=8585295.63..8652665.73 rows=2245670 width=44)',)
('                          Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority',)
('                          ->  Sort  (cost=8585295.63..8590909.81 rows=2245670 width=48)',)
('                                Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority',)
('                                ->  Parallel Hash Join  (cost=1689817.72..8210225.88 rows=2245670 width=48)',)
('                                      Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                      ->  Parallel Seq Scan on lineitem  (cost=0.00..5815292.00 rows=33335040 width=40)',)
("                                            Filter: (l_shipdate > '1995-03-13'::date)",)
('                                      ->  Parallel Hash  (cost=1660541.64..1660541.64 rows=1684167 width=12)',)
('                                            ->  Parallel Hash Join  (cost=184329.63..1660541.64 rows=1684167 width=12)',)
('                                                  Hash Cond: (orders.o_custkey = customer.c_custkey)',)
('                                                  ->  Parallel Seq Scan on orders  (cost=0.00..1370981.00 rows=8333333 width=16)',)
("                                                        Filter: (o_orderdate < '1995-03-13'::date)",)
('                                                  ->  Parallel Hash  (cost=176040.00..176040.00 rows=505250 width=4)',)
('                                                        ->  Parallel Seq Scan on customer  (cost=0.00..176040.00 rows=505250 width=4)',)
("                                                              Filter: (c_mktsegment = 'AUTOMOBILE'::bpchar)",)
Thread 0 -> Explain plan for Query/4.sql:
('GroupAggregate  (cost=7785650.29..7786777.29 rows=200 width=72)',)
('  Group Key: orders.o_orderpriority',)
('  ->  Sort  (cost=7785650.29..7786025.29 rows=150000 width=64)',)
('        Sort Key: orders.o_orderpriority',)
('        ->  Nested Loop  (cost=7765392.41..7767112.34 rows=150000 width=64)',)
('              ->  HashAggregate  (cost=7765391.84..7765393.84 rows=200 width=4)',)
('                    Group Key: lineitem.l_orderkey',)
('                    ->  Seq Scan on lineitem  (cost=0.00..7565381.60 rows=80004096 width=4)',)
('                          Filter: (l_commitdate < l_receiptdate)',)
('              ->  Index Scan using orders_pkey on orders  (cost=0.56..8.59 rows=1 width=68)',)
('                    Index Cond: (o_orderkey = lineitem.l_orderkey)',)
("                    Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate < '1995-04-01 00:00:00'::timestamp without time zone))",)
Thread 0 -> Explain plan for Query/5.sql:
('Sort  (cost=7576785.86..7576785.92 rows=25 width=136)',)
("  Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC",)
('  ->  Finalize GroupAggregate  (cost=7576768.51..7576785.28 rows=25 width=136)',)
('        Group Key: nation.n_name',)
('        ->  Gather Merge  (cost=7576768.51..7576784.59 rows=50 width=136)',)
('              Workers Planned: 2',)
('              ->  Partial GroupAggregate  (cost=7575768.49..7575778.80 rows=25 width=136)',)
('                    Group Key: nation.n_name',)
('                    ->  Sort  (cost=7575768.49..7575770.49 rows=800 width=140)',)
('                          Sort Key: nation.n_name',)
('                          ->  Parallel Hash Join  (cost=1633731.17..7575729.91 rows=800 width=140)',)
('                                Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))',)
('                                ->  Parallel Hash Join  (cost=1619944.49..7560326.23 rows=20001 width=152)',)
('                                      Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                      ->  Parallel Seq Scan on lineitem  (cost=0.00..5565279.20 rows=100005120 width=44)',)
('                                      ->  Parallel Hash  (cost=1619881.99..1619881.99 rows=5000 width=116)',)
('                                            ->  Parallel Hash Join  (cost=183175.41..1619881.99 rows=5000 width=116)',)
('                                                  Hash Cond: (orders.o_custkey = customer.c_custkey)',)
('                                                  ->  Parallel Seq Scan on orders  (cost=0.00..1433481.00 rows=125000 width=8)',)
("                                                        Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))",)
('                                                  ->  Parallel Hash  (cost=180167.41..180167.41 rows=100000 width=116)',)
('                                                        ->  Hash Join  (cost=2.41..180167.41 rows=100000 width=116)',)
('                                                              Hash Cond: (customer.c_nationkey = nation.n_nationkey)',)
('                                                              ->  Parallel Seq Scan on customer  (cost=0.00..169790.00 rows=2500000 width=8)',)
('                                                              ->  Hash  (cost=2.40..2.40 rows=1 width=108)',)
('                                                                    ->  Hash Join  (cost=1.07..2.40 rows=1 width=108)',)
('                                                                          Hash Cond: (nation.n_regionkey = region.r_regionkey)',)
('                                                                          ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112)',)
('                                                                          ->  Hash  (cost=1.06..1.06 rows=1 width=4)',)
('                                                                                ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)',)
("                                                                                      Filter: (r_name = 'MIDDLE EAST'::bpchar)",)
('                                ->  Parallel Hash  (cost=10634.67..10634.67 rows=166667 width=8)',)
('                                      ->  Parallel Seq Scan on supplier  (cost=0.00..10634.67 rows=166667 width=8)',)
Thread 0 -> Explain plan for Query/6.sql:
('Finalize Aggregate  (cost=6816347.59..6816347.60 rows=1 width=32)',)
('  ->  Gather  (cost=6816347.37..6816347.58 rows=2 width=32)',)
('        Workers Planned: 2',)
('        ->  Partial Aggregate  (cost=6815347.37..6815347.38 rows=1 width=32)',)
('              ->  Parallel Seq Scan on lineitem  (cost=0.00..6815343.20 rows=833 width=36)',)
("                    Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.05) AND (l_discount <= 0.07) AND (l_quantity < '24'::numeric))",)
Thread 0 -> Explain plan for Query/7.sql:
('Finalize GroupAggregate  (cost=6584003.43..6584261.24 rows=800 width=272)',)
('  Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))',)
('  ->  Gather Merge  (cost=6584003.43..6584229.24 rows=1600 width=272)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=6583003.40..6583044.54 rows=800 width=272)',)
('              Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))',)
('              ->  Sort  (cost=6583003.40..6583007.57 rows=1665 width=276)',)
('                    Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))',)
('                    ->  Parallel Hash Join  (cost=194602.37..6582914.32 rows=1665 width=276)',)
('                          Hash Cond: (orders.o_custkey = customer.c_custkey)',)
("                          Join Filter: (((n1.n_name = 'JAPAN'::bpchar) AND (n2.n_name = 'INDIA'::bpchar)) OR ((n1.n_name = 'INDIA'::bpchar) AND (n2.n_name = 'JAPAN'::bpchar)))",)
('                          ->  Nested Loop  (cost=11314.97..6394405.09 rows=40002 width=148)',)
('                                ->  Parallel Hash Join  (cost=11314.40..6078660.96 rows=40002 width=148)',)
('                                      Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)',)
('                                      ->  Parallel Seq Scan on lineitem  (cost=0.00..6065304.80 rows=500025 width=48)',)
("                                            Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))",)
('                                      ->  Parallel Hash  (cost=11147.74..11147.74 rows=13333 width=108)',)
('                                            ->  Hash Join  (cost=1.40..11147.74 rows=13333 width=108)',)
('                                                  Hash Cond: (supplier.s_nationkey = n1.n_nationkey)',)
('                                                  ->  Parallel Seq Scan on supplier  (cost=0.00..10634.67 rows=166667 width=8)',)
('                                                  ->  Hash  (cost=1.38..1.38 rows=2 width=108)',)
('                                                        ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108)',)
("                                                              Filter: ((n_name = 'JAPAN'::bpchar) OR (n_name = 'INDIA'::bpchar))",)
('                                ->  Index Scan using orders_pkey on orders  (cost=0.56..7.89 rows=1 width=8)',)
('                                      Index Cond: (o_orderkey = lineitem.l_orderkey)',)
('                          ->  Parallel Hash  (cost=177466.40..177466.40 rows=200000 width=108)',)
('                                ->  Hash Join  (cost=1.40..177466.40 rows=200000 width=108)',)
('                                      Hash Cond: (customer.c_nationkey = n2.n_nationkey)',)
('                                      ->  Parallel Seq Scan on customer  (cost=0.00..169790.00 rows=2500000 width=8)',)
('                                      ->  Hash  (cost=1.38..1.38 rows=2 width=108)',)
('                                            ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108)',)
("                                                  Filter: ((n_name = 'INDIA'::bpchar) OR (n_name = 'JAPAN'::bpchar))",)
Thread 0 -> Explain plan for Query/8.sql:
('Finalize GroupAggregate  (cost=7513425.10..7513468.16 rows=200 width=64)',)
('  Group Key: (EXTRACT(year FROM orders.o_orderdate))',)
('  ->  Gather Merge  (cost=7513425.10..7513460.86 rows=264 width=96)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=7512425.08..7512430.36 rows=132 width=96)',)
('              Group Key: (EXTRACT(year FROM orders.o_orderdate))',)
('              ->  Sort  (cost=7512425.08..7512425.41 rows=132 width=172)',)
('                    Sort Key: (EXTRACT(year FROM orders.o_orderdate))',)
('                    ->  Hash Join  (cost=1644032.15..7512420.43 rows=132 width=172)',)
('                          Hash Cond: (supplier.s_nationkey = n2.n_nationkey)',)
('                          ->  Nested Loop  (cost=1644030.59..7512418.14 rows=132 width=44)',)
('                                ->  Hash Join  (cost=1644030.16..7511397.23 rows=132 width=44)',)
('                                      Hash Cond: (customer.c_nationkey = n1.n_nationkey)',)
('                                      ->  Nested Loop  (cost=1644027.75..7511381.11 rows=3302 width=48)',)
('                                            ->  Parallel Hash Join  (cost=1644027.32..7485774.67 rows=3302 width=48)',)
('                                                  Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                                  ->  Parallel Hash Join  (cost=208372.82..6036165.60 rows=660409 width=44)',)
('                                                        Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('                                                        ->  Parallel Seq Scan on lineitem  (cost=0.00..5565279.20 rows=100005120 width=48)',)
('                                                        ->  Parallel Hash  (cost=208097.67..208097.67 rows=22012 width=4)',)
('                                                              ->  Parallel Seq Scan on part  (cost=0.00..208097.67 rows=22012 width=4)',)
("                                                                    Filter: ((p_type)::text = 'SMALL PLATED COPPER'::text)",)
('                                                  ->  Parallel Hash  (cost=1433481.00..1433481.00 rows=125000 width=12)',)
('                                                        ->  Parallel Seq Scan on orders  (cost=0.00..1433481.00 rows=125000 width=12)',)
("                                                              Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))",)
('                                            ->  Index Scan using customer_pkey on customer  (cost=0.43..7.75 rows=1 width=8)',)
('                                                  Index Cond: (c_custkey = orders.o_custkey)',)
('                                      ->  Hash  (cost=2.40..2.40 rows=1 width=4)',)
('                                            ->  Hash Join  (cost=1.07..2.40 rows=1 width=4)',)
('                                                  Hash Cond: (n1.n_regionkey = region.r_regionkey)',)
('                                                  ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)',)
('                                                  ->  Hash  (cost=1.06..1.06 rows=1 width=4)',)
('                                                        ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)',)
("                                                              Filter: (r_name = 'ASIA'::bpchar)",)
('                                ->  Index Scan using supplier_pkey on supplier  (cost=0.42..7.73 rows=1 width=8)',)
('                                      Index Cond: (s_suppkey = lineitem.l_suppkey)',)
('                          ->  Hash  (cost=1.25..1.25 rows=25 width=108)',)
('                                ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108)',)
Thread 0 -> Explain plan for Query/9.sql:
('Finalize GroupAggregate  (cost=9743414.63..9743730.38 rows=2355 width=168)',)
('  Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))',)
('  ->  Gather Merge  (cost=9743414.63..9743675.43 rows=1962 width=168)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=9742414.61..9742448.95 rows=981 width=168)',)
('              Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))',)
('              ->  Sort  (cost=9742414.61..9742417.06 rows=981 width=196)',)
('                    Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC',)
('                    ->  Hash Join  (cost=1315481.80..9742365.86 rows=981 width=196)',)
('                          Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                          ->  Nested Loop  (cost=1315480.23..9742358.84 rows=981 width=68)',)
('                                ->  Nested Loop  (cost=1315479.67..9734556.32 rows=981 width=68)',)
('                                      ->  Parallel Hash Join  (cost=1315479.25..9726910.81 rows=981 width=72)',)
('                                            Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))',)
('                                            ->  Parallel Hash Join  (cost=211412.92..8383865.70 rows=6060910 width=70)',)
('                                                  Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('                                                  ->  Parallel Seq Scan on lineitem  (cost=0.00..5565279.20 rows=100005120 width=66)',)
('                                                  ->  Parallel Hash  (cost=208097.67..208097.67 rows=202020 width=4)',)
('                                                        ->  Parallel Seq Scan on part  (cost=0.00..208097.67 rows=202020 width=4)',)
("                                                              Filter: ((p_name)::text ~~ '%dim%'::text)",)
('                                            ->  Parallel Hash  (cost=838961.33..838961.33 rows=13333333 width=14)',)
('                                                  ->  Parallel Seq Scan on partsupp  (cost=0.00..838961.33 rows=13333333 width=14)',)
('                                      ->  Index Scan using supplier_pkey on supplier  (cost=0.42..7.79 rows=1 width=8)',)
('                                            Index Cond: (s_suppkey = lineitem.l_suppkey)',)
('                                ->  Index Scan using orders_pkey on orders  (cost=0.56..7.95 rows=1 width=8)',)
('                                      Index Cond: (o_orderkey = lineitem.l_orderkey)',)
('                          ->  Hash  (cost=1.25..1.25 rows=25 width=108)',)
('                                ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108)',)
Thread 0 -> Explain plan for Query/10.sql:
('Limit  (cost=7281855.99..7281856.04 rows=20 width=279)',)
('  ->  Sort  (cost=7281855.99..7281870.99 rows=6000 width=279)',)
("        Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC",)
('        ->  Finalize GroupAggregate  (cost=7280925.46..7281696.33 rows=6000 width=279)',)
('              Group Key: customer.c_custkey, nation.n_name',)
('              ->  Gather Merge  (cost=7280925.46..7281571.33 rows=5000 width=279)',)
('                    Workers Planned: 2',)
('                    ->  Partial GroupAggregate  (cost=7279925.43..7279994.18 rows=2500 width=279)',)
('                          Group Key: customer.c_custkey, nation.n_name',)
('                          ->  Sort  (cost=7279925.43..7279931.68 rows=2500 width=283)',)
('                                Sort Key: customer.c_custkey, nation.n_name',)
('                                ->  Hash Join  (cost=1435534.50..7279784.34 rows=2500 width=283)',)
('                                      Hash Cond: (customer.c_nationkey = nation.n_nationkey)',)
('                                      ->  Nested Loop  (cost=1435532.93..7279775.10 rows=2500 width=183)',)
('                                            ->  Parallel Hash Join  (cost=1435532.50..7260440.07 rows=2500 width=40)',)
('                                                  Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                                  ->  Parallel Seq Scan on lineitem  (cost=0.00..5815292.00 rows=500025 width=40)',)
("                                                        Filter: (l_returnflag = 'R'::bpchar)",)
('                                                  ->  Parallel Hash  (cost=1433481.00..1433481.00 rows=125000 width=8)',)
('                                                        ->  Parallel Seq Scan on orders  (cost=0.00..1433481.00 rows=125000 width=8)',)
("                                                              Filter: ((o_orderdate >= '1993-08-01'::date) AND (o_orderdate < '1993-11-01 00:00:00'::timestamp without time zone))",)
('                                            ->  Index Scan using customer_pkey on customer  (cost=0.43..7.73 rows=1 width=147)',)
('                                                  Index Cond: (c_custkey = orders.o_custkey)',)
('                                      ->  Hash  (cost=1.25..1.25 rows=25 width=108)',)
('                                            ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108)',)
Thread 0 -> Explain plan for Query/11.sql:
('Sort  (cost=2024530.47..2024930.51 rows=160015 width=36)',)
('  Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC',)
('  InitPlan 1 (returns $1)',)
('    ->  Finalize Aggregate  (cost=907237.64..907237.65 rows=1 width=32)',)
('          ->  Gather  (cost=907237.42..907237.63 rows=2 width=32)',)
('                Workers Planned: 2',)
('                ->  Partial Aggregate  (cost=906237.42..906237.43 rows=1 width=32)',)
('                      ->  Parallel Hash Join  (cost=11231.00..902351.36 rows=518140 width=10)',)
('                            Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)',)
('                            ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..838961.33 rows=13333333 width=14)',)
('                            ->  Parallel Hash  (cost=11147.66..11147.66 rows=6667 width=4)',)
('                                  ->  Hash Join  (cost=1.32..11147.66 rows=6667 width=4)',)
('                                        Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)',)
('                                        ->  Parallel Seq Scan on supplier supplier_1  (cost=0.00..10634.67 rows=166667 width=8)',)
('                                        ->  Hash  (cost=1.31..1.31 rows=1 width=4)',)
('                                              ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4)',)
("                                                    Filter: (n_name = 'MOZAMBIQUE'::bpchar)",)
('  ->  Finalize GroupAggregate  (cost=961385.60..1099082.74 rows=160015 width=36)',)
('        Group Key: partsupp.ps_partkey',)
('        Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)',)
('        ->  Gather Merge  (cost=961385.60..1084681.36 rows=960092 width=36)',)
('              Workers Planned: 2',)
('              ->  Partial GroupAggregate  (cost=960385.58..972862.90 rows=480046 width=36)',)
('                    Group Key: partsupp.ps_partkey',)
('                    ->  Sort  (cost=960385.58..961680.93 rows=518140 width=14)',)
('                          Sort Key: partsupp.ps_partkey',)
('                          ->  Parallel Hash Join  (cost=11231.00..902351.36 rows=518140 width=14)',)
('                                Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)',)
('                                ->  Parallel Seq Scan on partsupp  (cost=0.00..838961.33 rows=13333333 width=18)',)
('                                ->  Parallel Hash  (cost=11147.66..11147.66 rows=6667 width=4)',)
('                                      ->  Hash Join  (cost=1.32..11147.66 rows=6667 width=4)',)
('                                            Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                                            ->  Parallel Seq Scan on supplier  (cost=0.00..10634.67 rows=166667 width=8)',)
('                                            ->  Hash  (cost=1.31..1.31 rows=1 width=4)',)
('                                                  ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)',)
("                                                        Filter: (n_name = 'MOZAMBIQUE'::bpchar)",)
Thread 0 -> Explain plan for Query/12.sql:
('Finalize GroupAggregate  (cost=6821123.48..6821187.75 rows=200 width=60)',)
('  Group Key: lineitem.l_shipmode',)
('  ->  Gather Merge  (cost=6821123.48..6821182.75 rows=400 width=60)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=6820123.46..6820136.56 rows=200 width=60)',)
('              Group Key: lineitem.l_shipmode',)
('              ->  Sort  (cost=6820123.46..6820124.85 rows=555 width=108)',)
('                    Sort Key: lineitem.l_shipmode',)
('                    ->  Nested Loop  (cost=0.56..6820098.16 rows=555 width=108)',)
('                          ->  Parallel Seq Scan on lineitem  (cost=0.00..6815343.20 rows=555 width=48)',)
("                                Filter: ((l_shipmode = ANY ('{RAIL,FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1997-01-01'::date) AND (l_receiptdate < '1998-01-01 00:00:00'::timestamp without time zone))",)
('                          ->  Index Scan using orders_pkey on orders  (cost=0.56..8.57 rows=1 width=68)',)
('                                Index Cond: (o_orderkey = lineitem.l_orderkey)',)
Thread 0 -> Explain plan for Query/13.sql:
('Sort  (cost=10249132.69..10249133.19 rows=200 width=16)',)
('  Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC',)
('  ->  HashAggregate  (cost=10249123.04..10249125.04 rows=200 width=16)',)
('        Group Key: count(orders.o_orderkey)',)
('        ->  HashAggregate  (cost=9161716.79..10159123.04 rows=6000000 width=12)',)
('              Group Key: customer.c_custkey',)
('              Planned Partitions: 128',)
('              ->  Hash Right Join  (cost=254254.43..2712361.79 rows=59994000 width=8)',)
('                    Hash Cond: (orders.o_custkey = customer.c_custkey)',)
('                    ->  Seq Scan on orders  (cost=0.00..1808481.00 rows=59994000 width=8)',)
("                          Filter: ((o_comment)::text !~~ '%pending%deposits%'::text)",)
('                    ->  Hash  (cost=155816.43..155816.43 rows=6000000 width=4)',)
('                          ->  Index Only Scan using customer_pkey on customer  (cost=0.43..155816.43 rows=6000000 width=4)',)
Thread 0 -> Explain plan for Query/14.sql:
('Finalize Aggregate  (cost=6371187.04..6371187.05 rows=1 width=32)',)
('  ->  Gather  (cost=6371186.80..6371187.01 rows=2 width=64)',)
('        Workers Planned: 2',)
('        ->  Partial Aggregate  (cost=6370186.80..6370186.81 rows=1 width=64)',)
('              ->  Parallel Hash Join  (cost=264218.00..6361436.36 rows=500025 width=57)',)
('                    Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('                    ->  Parallel Seq Scan on lineitem  (cost=0.00..6065304.80 rows=500025 width=40)',)
("                          Filter: ((l_shipdate >= '1996-12-01'::date) AND (l_shipdate < '1997-01-01 00:00:00'::timestamp without time zone))",)
('                    ->  Parallel Hash  (cost=199764.33..199764.33 rows=3333333 width=25)',)
('                          ->  Parallel Seq Scan on part  (cost=0.00..199764.33 rows=3333333 width=25)',)
Thread 0 -> Explain plan for Query/16.sql:
('Sort  (cost=1903520.32..1903988.44 rows=187246 width=44)',)
('  Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size',)
('  ->  GroupAggregate  (cost=1850814.62..1881361.65 rows=187246 width=44)',)
('        Group Key: part.p_brand, part.p_type, part.p_size',)
('        ->  Sort  (cost=1850814.62..1856549.53 rows=2293966 width=40)',)
('              Sort Key: part.p_brand, part.p_type, part.p_size',)
('              ->  Merge Join  (cost=12107.36..1483009.85 rows=2293966 width=40)',)
('                    Merge Cond: (partsupp.ps_partkey = part.p_partkey)',)
('                    ->  Index Only Scan using partsupp_pkey on partsupp  (cost=12056.00..923032.00 rows=16000000 width=8)',)
('                          Filter: (NOT (hashed SubPlan 1))',)
('                          SubPlan 1',)
('                            ->  Gather  (cost=1000.00..12055.33 rows=40 width=4)',)
('                                  Workers Planned: 2',)
('                                  ->  Parallel Seq Scan on supplier  (cost=0.00..11051.33 rows=17 width=4)',)
("                                        Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)",)
('                    ->  Index Scan using part_pkey on part  (cost=0.43..494182.43 rows=1146983 width=40)',)
("                          Filter: ((p_brand <> 'Brand#34'::bpchar) AND ((p_type)::text !~~ 'LARGE BRUSHED%'::text) AND (p_size = ANY ('{48,19,12,4,41,7,21,39}'::integer[])))",)
Thread 0 -> Explain plan for Query/17.sql:
('Aggregate  (cost=83497732.65..83497732.66 rows=1 width=32)',)
('  ->  Hash Join  (cost=218331.56..83497532.51 rows=80054 width=18)',)
('        Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('        Join Filter: (lineitem.l_quantity < (SubPlan 1))',)
('        ->  Seq Scan on lineitem  (cost=0.00..6965350.88 rows=240012288 width=40)',)
('        ->  Hash  (cost=218231.50..218231.50 rows=8005 width=4)',)
('              ->  Gather  (cost=1000.00..218231.50 rows=8005 width=4)',)
('                    Workers Planned: 2',)
('                    ->  Parallel Seq Scan on part  (cost=0.00..216431.00 rows=3335 width=4)',)
("                          Filter: ((p_brand = 'Brand#44'::bpchar) AND (p_container = 'WRAP PKG'::bpchar))",)
('        SubPlan 1',)
('          ->  Aggregate  (cost=7568381.75..7568381.77 rows=1 width=32)',)
('                ->  Seq Scan on lineitem lineitem_1  (cost=0.00..7565381.60 rows=1200061 width=18)',)
('                      Filter: (l_partkey = part.p_partkey)',)
Thread 0 -> Explain plan for Query/18.sql:
('Limit  (cost=13932888.46..13932888.71 rows=100 width=81)',)
('  ->  Sort  (cost=13932888.46..13932889.13 rows=268 width=81)',)
('        Sort Key: orders.o_totalprice DESC, orders.o_orderdate',)
('        ->  GroupAggregate  (cost=13932872.18..13932878.21 rows=268 width=81)',)
('              Group Key: customer.c_custkey, orders.o_orderkey',)
('              ->  Sort  (cost=13932872.18..13932872.85 rows=268 width=67)',)
('                    Sort Key: customer.c_custkey, orders.o_orderkey',)
('                    ->  Hash Join  (cost=6067461.73..13932861.37 rows=268 width=67)',)
('                          Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                          ->  Seq Scan on lineitem  (cost=0.00..6965350.88 rows=240012288 width=22)',)
('                          ->  Hash  (cost=6067460.90..6067460.90 rows=67 width=53)',)
('                                ->  Nested Loop  (cost=6066315.97..6067460.90 rows=67 width=53)',)
('                                      ->  Nested Loop  (cost=6066315.53..6066943.34 rows=67 width=34)',)
('                                            ->  Finalize GroupAggregate  (cost=6066314.97..6066367.64 rows=67 width=4)',)
('                                                  Group Key: lineitem_1.l_orderkey',)
("                                                  Filter: (sum(lineitem_1.l_quantity) > '314'::numeric)",)
('                                                  ->  Gather Merge  (cost=6066314.97..6066361.64 rows=400 width=36)',)
('                                                        Workers Planned: 2',)
('                                                        ->  Sort  (cost=6065314.94..6065315.44 rows=200 width=36)',)
('                                                              Sort Key: lineitem_1.l_orderkey',)
('                                                              ->  Partial HashAggregate  (cost=6065304.80..6065307.30 rows=200 width=36)',)
('                                                                    Group Key: lineitem_1.l_orderkey',)
('                                                                    ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..5565279.20 rows=100005120 width=22)',)
('                                            ->  Index Scan using orders_pkey on orders  (cost=0.56..8.58 rows=1 width=30)',)
('                                                  Index Cond: (o_orderkey = lineitem_1.l_orderkey)',)
('                                      ->  Index Scan using customer_pkey on customer  (cost=0.43..7.72 rows=1 width=23)',)
('                                            Index Cond: (c_custkey = orders.o_custkey)',)
Thread 0 -> Explain plan for Query/19.sql:
('Aggregate  (cost=7567022.02..7567022.03 rows=1 width=32)',)
('  ->  Gather  (cost=1000.43..7567022.01 rows=1 width=36)',)
('        Workers Planned: 2',)
('        ->  Nested Loop  (cost=0.43..7566021.91 rows=1 width=36)',)
('              ->  Parallel Seq Scan on lineitem  (cost=0.00..7565381.60 rows=75 width=58)',)
('                    Filter: ((l_shipmode = ANY (\'{AIR,"AIR REG"}\'::bpchar[])) AND (l_shipinstruct = \'DELIVER IN PERSON\'::bpchar) AND (((l_quantity >= \'4\'::numeric) AND (l_quantity <= \'14\'::numeric)) OR ((l_quantity >= \'18\'::numeric) AND (l_quantity <= \'28\'::numeric)) OR ((l_quantity >= \'29\'::numeric) AND (l_quantity <= \'39\'::numeric))))',)
('              ->  Index Scan using part_pkey on part  (cost=0.43..8.53 rows=1 width=30)',)
('                    Index Cond: (p_partkey = lineitem.l_partkey)',)
('                    Filter: ((p_size >= 1) AND (((p_brand = \'Brand#52\'::bpchar) AND (p_container = ANY (\'{"SM CASE","SM BOX","SM PACK","SM PKG"}\'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = \'Brand#11\'::bpchar) AND (p_container = ANY (\'{"MED BAG","MED BOX","MED PKG","MED PACK"}\'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = \'Brand#51\'::bpchar) AND (p_container = ANY (\'{"LG CASE","LG BOX","LG PACK","LG PKG"}\'::bpchar[])) AND (p_size <= 15))) AND (((p_brand = \'Brand#52\'::bpchar) AND (p_container = ANY (\'{"SM CASE","SM BOX","SM PACK","SM PKG"}\'::bpchar[])) AND (lineitem.l_quantity >= \'4\'::numeric) AND (lineitem.l_quantity <= \'14\'::numeric) AND (p_size <= 5)) OR ((p_brand = \'Brand#11\'::bpchar) AND (p_container = ANY (\'{"MED BAG","MED BOX","MED PKG","MED PACK"}\'::bpchar[])) AND (lineitem.l_quantity >= \'18\'::numeric) AND (lineitem.l_quantity <= \'28\'::numeric) AND (p_size <= 10)) OR ((p_brand = \'Brand#51\'::bpchar) AND (p_container = ANY (\'{"LG CASE","LG BOX","LG PACK","LG PKG"}\'::bpchar[])) AND (lineitem.l_quantity >= \'29\'::numeric) AND (lineitem.l_quantity <= \'39\'::numeric) AND (p_size <= 15))))',)
Thread 0 -> Explain plan for Query/20.sql:
('Nested Loop Semi Join  (cost=12572.13..11694530506506.90 rows=4187 width=51)',)
('  ->  Gather Merge  (cost=12571.14..14434.60 rows=16000 width=55)',)
('        Workers Planned: 2',)
('        ->  Sort  (cost=11571.11..11587.78 rows=6667 width=55)',)
('              Sort Key: supplier.s_name',)
('              ->  Hash Join  (cost=1.32..11147.66 rows=6667 width=55)',)
('                    Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                    ->  Parallel Seq Scan on supplier  (cost=0.00..10634.67 rows=166667 width=59)',)
('                    ->  Hash  (cost=1.31..1.31 rows=1 width=4)',)
('                          ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)',)
("                                Filter: (n_name = 'ALGERIA'::bpchar)",)
('  ->  Nested Loop  (cost=0.99..730908155.74 rows=1 width=4)',)
('        ->  Index Scan using partsupp_pkey on partsupp  (cost=0.56..730908056.32 rows=26 width=8)',)
('              Index Cond: (ps_suppkey = supplier.s_suppkey)',)
('              Filter: ((ps_availqty)::numeric > (SubPlan 1))',)
('              SubPlan 1',)
('                ->  Aggregate  (cost=9365473.84..9365473.85 rows=1 width=32)',)
('                      ->  Seq Scan on lineitem  (cost=0.00..9365473.76 rows=30 width=18)',)
("                            Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))",)
('        ->  Index Scan using part_pkey on part  (cost=0.43..3.82 rows=1 width=4)',)
('              Index Cond: (p_partkey = partsupp.ps_partkey)',)
("              Filter: ((p_name)::text ~~ 'green%'::text)",)
Thread 0 -> Explain plan for Query/21.sql:
('Limit  (cost=21472884.74..21472884.99 rows=100 width=34)',)
('  ->  Sort  (cost=21472884.74..21472894.74 rows=4000 width=34)',)
('        Sort Key: (count(*)) DESC, supplier.s_name',)
('        ->  Finalize GroupAggregate  (cost=21472261.20..21472731.87 rows=4000 width=34)',)
('              Group Key: supplier.s_name',)
('              ->  Gather Merge  (cost=21472261.20..21472675.20 rows=3334 width=34)',)
('                    Workers Planned: 2',)
('                    ->  Partial GroupAggregate  (cost=21471261.17..21471290.35 rows=1667 width=34)',)
('                          Group Key: supplier.s_name',)
('                          ->  Sort  (cost=21471261.17..21471265.34 rows=1667 width=26)',)
('                                Sort Key: supplier.s_name',)
('                                ->  Parallel Hash Anti Join  (cost=14952446.70..21471171.96 rows=1667 width=26)',)
('                                      Hash Cond: (l1.l_orderkey = l3.l_orderkey)',)
('                                      Join Filter: (l3.l_suppkey <> l1.l_suppkey)',)
('                                      ->  Parallel Hash Join  (cost=8590251.70..14978661.93 rows=3333 width=34)',)
('                                            Hash Cond: (l1.l_orderkey = orders.o_orderkey)',)
('                                            ->  Parallel Hash Semi Join  (cost=7217219.20..13592972.34 rows=666701 width=38)',)
('                                                  Hash Cond: (l1.l_orderkey = l2.l_orderkey)',)
('                                                  Join Filter: (l2.l_suppkey <> l1.l_suppkey)',)
('                                                  ->  Parallel Hash Join  (cost=11231.00..5957085.52 rows=1333402 width=34)',)
('                                                        Hash Cond: (l1.l_suppkey = supplier.s_suppkey)',)
('                                                        ->  Parallel Seq Scan on lineitem l1  (cost=0.00..5815292.00 rows=33335040 width=8)',)
('                                                              Filter: (l_receiptdate > l_commitdate)',)
('                                                        ->  Parallel Hash  (cost=11147.66..11147.66 rows=6667 width=30)',)
('                                                              ->  Hash Join  (cost=1.32..11147.66 rows=6667 width=30)',)
('                                                                    Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                                                                    ->  Parallel Seq Scan on supplier  (cost=0.00..10634.67 rows=166667 width=34)',)
('                                                                    ->  Hash  (cost=1.31..1.31 rows=1 width=4)',)
('                                                                          ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)',)
("                                                                                Filter: (n_name = 'EGYPT'::bpchar)",)
('                                                  ->  Parallel Hash  (cost=5565279.20..5565279.20 rows=100005120 width=8)',)
('                                                        ->  Parallel Seq Scan on lineitem l2  (cost=0.00..5565279.20 rows=100005120 width=8)',)
('                                            ->  Parallel Hash  (cost=1370981.00..1370981.00 rows=125000 width=4)',)
('                                                  ->  Parallel Seq Scan on orders  (cost=0.00..1370981.00 rows=125000 width=4)',)
("                                                        Filter: (o_orderstatus = 'F'::bpchar)",)
('                                      ->  Parallel Hash  (cost=5815292.00..5815292.00 rows=33335040 width=8)',)
('                                            ->  Parallel Seq Scan on lineitem l3  (cost=0.00..5815292.00 rows=33335040 width=8)',)
('                                                  Filter: (l_receiptdate > l_commitdate)',)
Thread 0 -> Explain plan for Query/22.sql:
('Finalize GroupAggregate  (cost=6581498.21..6586169.88 rows=35000 width=72)',)
('  Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))',)
('  InitPlan 1 (returns $1)',)
('    ->  Finalize Aggregate  (cost=211614.28..211614.29 rows=1 width=32)',)
('          ->  Gather  (cost=211614.06..211614.27 rows=2 width=32)',)
('                Workers Planned: 2',)
('                ->  Partial Aggregate  (cost=210614.06..210614.07 rows=1 width=32)',)
('                      ->  Parallel Seq Scan on customer customer_1  (cost=0.00..210415.00 rows=79622 width=6)',)
("                            Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{20,40,22,30,39,42,21}'::text[])))",)
('  ->  Gather Merge  (cost=6369883.92..6373651.43 rows=29166 width=72)',)
('        Workers Planned: 2',)
('        Params Evaluated: $1',)
('        ->  Partial GroupAggregate  (cost=6368883.90..6369284.93 rows=14583 width=72)',)
('              Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))',)
('              ->  Sort  (cost=6368883.90..6368920.35 rows=14583 width=38)',)
('                    Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))',)
('                    ->  Parallel Hash Anti Join  (cost=1718638.00..6367875.34 rows=14583 width=38)',)
('                          Hash Cond: (customer.c_custkey = orders.o_custkey)',)
('                          ->  Parallel Seq Scan on customer  (cost=0.00..210415.00 rows=29167 width=26)',)
("                                Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{20,40,22,30,39,42,21}'::text[])))",)
('                          ->  Parallel Hash  (cost=1308481.00..1308481.00 rows=25000000 width=4)',)
('                                ->  Parallel Seq Scan on orders  (cost=0.00..1308481.00 rows=25000000 width=4)',)
