Thread 0 -> Explain plan for Query/1.sql:
('Finalize GroupAggregate  (cost=9245629.25..9245631.21 rows=6 width=236)',)
('  Group Key: l_returnflag, l_linestatus',)
('  ->  Gather Merge  (cost=9245629.25..9245630.65 rows=12 width=236)',)
('        Workers Planned: 2',)
('        ->  Sort  (cost=9244629.23..9244629.24 rows=6 width=236)',)
('              Sort Key: l_returnflag, l_linestatus',)
('              ->  Partial HashAggregate  (cost=9244629.02..9244629.15 rows=6 width=236)',)
('                    Group Key: l_returnflag, l_linestatus',)
('                    ->  Parallel Seq Scan on lineitem  (cost=0.00..5814736.50 rows=97996929 width=25)',)
("                          Filter: (l_shipdate <= '1998-08-15 00:00:00'::timestamp without time zone)",)
Thread 0 -> Explain plan for Query/2.sql:
('Limit  (cost=4919157574.64..4919157574.64 rows=1 width=271)',)
('  ->  Sort  (cost=4919157574.64..4919157574.64 rows=1 width=271)',)
('        Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey',)
('        ->  Hash Join  (cost=464535.14..4919157574.63 rows=1 width=271)',)
('              Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))',)
('              ->  Seq Scan on part  (cost=0.00..143218.28 rows=17543 width=30)',)
("                    Filter: (((p_type)::text ~~ '%STEEL'::text) AND (p_size = 30))",)
('              ->  Hash  (cost=460166.93..460166.93 rows=88814 width=251)',)
('                    ->  Gather  (cost=6664.35..460166.93 rows=88814 width=251)',)
('                          Workers Planned: 2',)
('                          ->  Parallel Hash Join  (cost=5664.35..450285.53 rows=37006 width=251)',)
('                                Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)',)
('                                ->  Parallel Seq Scan on partsupp  (cost=0.00..419462.58 rows=6667858 width=14)',)
('                                ->  Parallel Hash  (cost=5658.23..5658.23 rows=490 width=245)',)
('                                      ->  Hash Join  (cost=24.50..5658.23 rows=490 width=245)',)
('                                            Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                                            ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=145)',)
('                                            ->  Hash  (cost=24.48..24.48 rows=1 width=108)',)
('                                                  ->  Hash Join  (cost=12.14..24.48 rows=1 width=108)',)
('                                                        Hash Cond: (nation.n_regionkey = region.r_regionkey)',)
('                                                        ->  Seq Scan on nation  (cost=0.00..11.70 rows=170 width=112)',)
('                                                        ->  Hash  (cost=12.13..12.13 rows=1 width=4)',)
('                                                              ->  Seq Scan on region  (cost=0.00..12.13 rows=1 width=4)',)
("                                                                    Filter: (r_name = 'ASIA'::bpchar)",)
('              SubPlan 1',)
('                ->  Aggregate  (cost=560741.76..560741.77 rows=1 width=32)',)
('                      ->  Nested Loop  (cost=24.50..560741.76 rows=1 width=6)',)
('                            Join Filter: (supplier_1.s_suppkey = partsupp_1.ps_suppkey)',)
('                            ->  Hash Join  (cost=24.50..7269.26 rows=1176 width=4)',)
('                                  Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)',)
('                                  ->  Seq Scan on supplier supplier_1  (cost=0.00..6483.00 rows=200000 width=8)',)
('                                  ->  Hash  (cost=24.48..24.48 rows=1 width=4)',)
('                                        ->  Hash Join  (cost=12.14..24.48 rows=1 width=4)',)
('                                              Hash Cond: (nation_1.n_regionkey = region_1.r_regionkey)',)
('                                              ->  Seq Scan on nation nation_1  (cost=0.00..11.70 rows=170 width=8)',)
('                                              ->  Hash  (cost=12.13..12.13 rows=1 width=4)',)
('                                                    ->  Seq Scan on region region_1  (cost=0.00..12.13 rows=1 width=4)',)
("                                                          Filter: (r_name = 'ASIA'::bpchar)",)
('                            ->  Materialize  (cost=0.00..552819.91 rows=37 width=10)',)
('                                  ->  Seq Scan on partsupp partsupp_1  (cost=0.00..552819.72 rows=37 width=10)',)
('                                        Filter: (part.p_partkey = ps_partkey)',)
Thread 0 -> Explain plan for Query/3.sql:
('Limit  (cost=10185558.86..10185558.89 rows=10 width=44)',)
('  ->  Sort  (cost=10185558.86..10217015.63 rows=12582706 width=44)',)
("        Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate",)
('        ->  Finalize GroupAggregate  (cost=8257716.59..9913651.11 rows=12582706 width=44)',)
('              Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority',)
('              ->  Gather Merge  (cost=8257716.59..9625297.43 rows=10485588 width=44)',)
('                    Workers Planned: 2',)
('                    ->  Partial GroupAggregate  (cost=8256716.56..8414000.38 rows=5242794 width=44)',)
('                          Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority',)
('                          ->  Sort  (cost=8256716.56..8269823.55 rows=5242794 width=24)',)
('                                Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority',)
('                                ->  Parallel Hash Join  (cost=886955.37..7456530.83 rows=5242794 width=24)',)
('                                      Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                      ->  Parallel Seq Scan on lineitem  (cost=0.00..5814736.50 rows=53792793 width=16)',)
("                                            Filter: (l_shipdate > '1995-03-13'::date)",)
('                                      ->  Parallel Hash  (cost=865777.52..865777.52 rows=1218308 width=12)',)
('                                            ->  Parallel Hash Join  (cost=92127.50..865777.52 rows=1218308 width=12)',)
('                                                  Hash Cond: (orders.o_custkey = customer.c_custkey)',)
('                                                  ->  Parallel Seq Scan on orders  (cost=0.00..685495.00 rows=6074333 width=16)',)
("                                                        Filter: (o_orderdate < '1995-03-13'::date)",)
('                                                  ->  Parallel Hash  (cost=88014.21..88014.21 rows=250663 width=4)',)
('                                                        ->  Parallel Seq Scan on customer  (cost=0.00..88014.21 rows=250663 width=4)',)
("                                                              Filter: (c_mktsegment = 'AUTOMOBILE'::bpchar)",)
Thread 0 -> Explain plan for Query/4.sql:
('Finalize GroupAggregate  (cost=7216811.78..7216860.26 rows=5 width=24)',)
('  Group Key: orders.o_orderpriority',)
('  ->  Gather Merge  (cost=7216811.78..7216860.16 rows=10 width=24)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=7215811.76..7215858.98 rows=5 width=24)',)
('              Group Key: orders.o_orderpriority',)
('              ->  Sort  (cost=7215811.76..7215827.48 rows=6290 width=16)',)
('                    Sort Key: orders.o_orderpriority',)
('                    ->  Parallel Hash Semi Join  (cost=6361588.34..7215414.89 rows=6290 width=16)',)
('                          Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)',)
('                          ->  Parallel Seq Scan on orders  (cost=0.00..716745.60 rows=473949 width=20)',)
("                                Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate < '1995-04-01 00:00:00'::timestamp without time zone))",)
('                          ->  Parallel Hash  (cost=5814736.50..5814736.50 rows=33331907 width=4)',)
('                                ->  Parallel Seq Scan on lineitem  (cost=0.00..5814736.50 rows=33331907 width=4)',)
('                                      Filter: (l_commitdate < l_receiptdate)',)
Thread 0 -> Explain plan for Query/5.sql:
('Sort  (cost=6762341.63..6762342.06 rows=170 width=136)',)
("  Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC",)
('  ->  Finalize GroupAggregate  (cost=6762245.34..6762335.34 rows=170 width=136)',)
('        Group Key: nation.n_name',)
('        ->  Gather Merge  (cost=6762245.34..6762330.66 rows=340 width=136)',)
('              Workers Planned: 2',)
('              ->  Partial GroupAggregate  (cost=6761245.32..6761291.39 rows=170 width=136)',)
('                    Group Key: nation.n_name',)
('                    ->  Sort  (cost=6761245.32..6761254.11 rows=3516 width=116)',)
('                          Sort Key: nation.n_name',)
('                          ->  Parallel Hash Join  (cost=820266.86..6761038.23 rows=3516 width=116)',)
('                                Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))',)
('                                ->  Parallel Hash Join  (cost=813700.53..6753797.96 rows=87906 width=128)',)
('                                      Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                      ->  Parallel Seq Scan on lineitem  (cost=0.00..5564747.20 rows=99995720 width=20)',)
('                                      ->  Parallel Hash  (cost=813563.17..813563.17 rows=10989 width=116)',)
('                                            ->  Parallel Hash Join  (cost=89766.35..813563.17 rows=10989 width=116)',)
('                                                  Hash Cond: (orders.o_custkey = customer.c_custkey)',)
('                                                  ->  Parallel Seq Scan on orders  (cost=0.00..716745.60 rows=1868114 width=8)',)
("                                                        Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))",)
('                                                  ->  Parallel Hash  (cost=89674.45..89674.45 rows=7352 width=116)',)
('                                                        ->  Hash Join  (cost=24.50..89674.45 rows=7352 width=116)',)
('                                                              Hash Cond: (customer.c_nationkey = nation.n_nationkey)',)
('                                                              ->  Parallel Seq Scan on customer  (cost=0.00..84889.77 rows=1249777 width=8)',)
('                                                              ->  Hash  (cost=24.48..24.48 rows=1 width=108)',)
('                                                                    ->  Hash Join  (cost=12.14..24.48 rows=1 width=108)',)
('                                                                          Hash Cond: (nation.n_regionkey = region.r_regionkey)',)
('                                                                          ->  Seq Scan on nation  (cost=0.00..11.70 rows=170 width=112)',)
('                                                                          ->  Hash  (cost=12.13..12.13 rows=1 width=4)',)
('                                                                                ->  Seq Scan on region  (cost=0.00..12.13 rows=1 width=4)',)
("                                                                                      Filter: (r_name = 'MIDDLE EAST'::bpchar)",)
('                                ->  Parallel Hash  (cost=5316.33..5316.33 rows=83333 width=8)',)
('                                      ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=8)',)
Thread 0 -> Explain plan for Query/6.sql:
('Finalize Aggregate  (cost=6825367.94..6825367.95 rows=1 width=32)',)
('  ->  Gather  (cost=6825367.71..6825367.92 rows=2 width=32)',)
('        Workers Planned: 2',)
('        ->  Partial Aggregate  (cost=6824367.71..6824367.72 rows=1 width=32)',)
('              ->  Parallel Seq Scan on lineitem  (cost=0.00..6814693.70 rows=1934802 width=12)',)
("                    Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.05) AND (l_discount <= 0.07) AND (l_quantity < '24'::numeric))",)
Thread 0 -> Explain plan for Query/7.sql:
('Finalize GroupAggregate  (cost=7000396.00..7001084.27 rows=5093 width=272)',)
('  Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))',)
('  ->  Gather Merge  (cost=7000396.00..7000954.83 rows=4244 width=272)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=6999395.98..6999464.94 rows=2122 width=272)',)
('              Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))',)
('              ->  Sort  (cost=6999395.98..6999401.28 rows=2122 width=252)',)
('                    Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))',)
('                    ->  Parallel Hash Join  (cost=801596.60..6999278.72 rows=2122 width=252)',)
('                          Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
("                          Join Filter: (((n1.n_name = 'JAPAN'::bpchar) AND (n2.n_name = 'INDIA'::bpchar)) OR ((n1.n_name = 'INDIA'::bpchar) AND (n2.n_name = 'JAPAN'::bpchar)))",)
('                          ->  Parallel Hash Join  (cost=5663.46..6186208.11 rows=358667 width=124)',)
('                                Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)',)
('                                ->  Parallel Seq Scan on lineitem  (cost=0.00..6064725.80 rows=30486667 width=24)',)
("                                      Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))",)
('                                ->  Parallel Hash  (cost=5651.21..5651.21 rows=980 width=108)',)
('                                      ->  Hash Join  (cost=12.58..5651.21 rows=980 width=108)',)
('                                            Hash Cond: (supplier.s_nationkey = n1.n_nationkey)',)
('                                            ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=8)',)
('                                            ->  Hash  (cost=12.55..12.55 rows=2 width=108)',)
('                                                  ->  Seq Scan on nation n1  (cost=0.00..12.55 rows=2 width=108)',)
("                                                        Filter: ((n_name = 'JAPAN'::bpchar) OR (n_name = 'INDIA'::bpchar))",)
('                          ->  Parallel Hash  (cost=791652.87..791652.87 rows=147062 width=108)',)
('                                ->  Parallel Hash Join  (cost=89919.82..791652.87 rows=147062 width=108)',)
('                                      Hash Cond: (orders.o_custkey = customer.c_custkey)',)
('                                      ->  Parallel Seq Scan on orders  (cost=0.00..654244.40 rows=12500240 width=8)',)
('                                      ->  Parallel Hash  (cost=89736.04..89736.04 rows=14703 width=108)',)
('                                            ->  Hash Join  (cost=12.58..89736.04 rows=14703 width=108)',)
('                                                  Hash Cond: (customer.c_nationkey = n2.n_nationkey)',)
('                                                  ->  Parallel Seq Scan on customer  (cost=0.00..84889.77 rows=1249777 width=8)',)
('                                                  ->  Hash  (cost=12.55..12.55 rows=2 width=108)',)
('                                                        ->  Seq Scan on nation n2  (cost=0.00..12.55 rows=2 width=108)',)
("                                                              Filter: ((n_name = 'INDIA'::bpchar) OR (n_name = 'JAPAN'::bpchar))",)
Thread 0 -> Explain plan for Query/8.sql:
('Finalize GroupAggregate  (cost=6872942.80..6873335.58 rows=2406 width=64)',)
('  Group Key: (EXTRACT(year FROM orders.o_orderdate))',)
('  ->  Gather Merge  (cost=6872942.80..6873258.34 rows=2330 width=96)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=6871942.77..6871989.37 rows=1165 width=96)',)
('              Group Key: (EXTRACT(year FROM orders.o_orderdate))',)
('              ->  Sort  (cost=6871942.77..6871945.69 rows=1165 width=148)',)
('                    Sort Key: (EXTRACT(year FROM orders.o_orderdate))',)
('                    ->  Hash Join  (cost=6866230.83..6871883.44 rows=1165 width=148)',)
('                          Hash Cond: (supplier.s_nationkey = n2.n_nationkey)',)
('                          ->  Parallel Hash Join  (cost=6866217.00..6871850.68 rows=1165 width=20)',)
('                                Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)',)
('                                ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=8)',)
('                                ->  Parallel Hash  (cost=6866202.44..6866202.44 rows=1165 width=20)',)
('                                      ->  Parallel Hash Join  (cost=925074.84..6866202.44 rows=1165 width=20)',)
('                                            Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('                                            ->  Parallel Hash Join  (cost=820886.66..6761350.23 rows=175782 width=24)',)
('                                                  Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                                  ->  Parallel Seq Scan on lineitem  (cost=0.00..5564747.20 rows=99995720 width=24)',)
('                                                  ->  Parallel Hash  (cost=820611.99..820611.99 rows=21974 width=8)',)
('                                                        ->  Parallel Hash Join  (cost=89766.35..820611.99 rows=21974 width=8)',)
('                                                              Hash Cond: (orders.o_custkey = customer.c_custkey)',)
('                                                              ->  Parallel Seq Scan on orders  (cost=0.00..716745.60 rows=3735594 width=12)',)
("                                                                    Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))",)
('                                                              ->  Parallel Hash  (cost=89674.45..89674.45 rows=7352 width=4)',)
('                                                                    ->  Hash Join  (cost=24.50..89674.45 rows=7352 width=4)',)
('                                                                          Hash Cond: (customer.c_nationkey = n1.n_nationkey)',)
('                                                                          ->  Parallel Seq Scan on customer  (cost=0.00..84889.77 rows=1249777 width=8)',)
('                                                                          ->  Hash  (cost=24.48..24.48 rows=1 width=4)',)
('                                                                                ->  Hash Join  (cost=12.14..24.48 rows=1 width=4)',)
('                                                                                      Hash Cond: (n1.n_regionkey = region.r_regionkey)',)
('                                                                                      ->  Seq Scan on nation n1  (cost=0.00..11.70 rows=170 width=8)',)
('                                                                                      ->  Hash  (cost=12.13..12.13 rows=1 width=4)',)
('                                                                                            ->  Seq Scan on region  (cost=0.00..12.13 rows=1 width=4)',)
("                                                                                                  Filter: (r_name = 'ASIA'::bpchar)",)
('                                            ->  Parallel Hash  (cost=104050.13..104050.13 rows=11044 width=4)',)
('                                                  ->  Parallel Seq Scan on part  (cost=0.00..104050.13 rows=11044 width=4)',)
("                                                        Filter: ((p_type)::text = 'SMALL PLATED COPPER'::text)",)
('                          ->  Hash  (cost=11.70..11.70 rows=170 width=108)',)
('                                ->  Seq Scan on nation n2  (cost=0.00..11.70 rows=170 width=108)',)
Thread 0 -> Explain plan for Query/9.sql:
('Finalize GroupAggregate  (cost=9001680.81..9001730.38 rows=370 width=168)',)
('  Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))',)
('  ->  Gather Merge  (cost=9001680.81..9001721.75 rows=308 width=168)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=9000680.79..9000686.18 rows=154 width=168)',)
('              Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))',)
('              ->  Sort  (cost=9000680.79..9000681.17 rows=154 width=159)',)
('                    Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC',)
('                    ->  Hash Join  (cost=8299551.75..9000675.19 rows=154 width=159)',)
('                          Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                          ->  Parallel Hash Join  (cost=8299537.92..9000658.86 rows=154 width=31)',)
('                                Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)',)
('                                ->  Parallel Seq Scan on orders  (cost=0.00..654244.40 rows=12500240 width=8)',)
('                                ->  Parallel Hash  (cost=8299536.00..8299536.00 rows=154 width=31)',)
('                                      ->  Parallel Hash Join  (cost=8293906.52..8299536.00 rows=154 width=31)',)
('                                            Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)',)
('                                            ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=8)',)
('                                            ->  Parallel Hash  (cost=8293904.60..8293904.60 rows=154 width=35)',)
('                                                  ->  Parallel Hash Join  (cost=7604060.58..8293904.60 rows=154 width=35)',)
('                                                        Hash Cond: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND (partsupp.ps_partkey = lineitem.l_partkey))',)
('                                                        ->  Parallel Seq Scan on partsupp  (cost=0.00..419462.58 rows=6667858 width=14)',)
('                                                        ->  Parallel Hash  (cost=7442766.52..7442766.52 rows=7070404 width=33)',)
('                                                              ->  Parallel Hash Join  (cost=105984.25..7442766.52 rows=7070404 width=33)',)
('                                                                    Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('                                                                    ->  Parallel Seq Scan on lineitem  (cost=0.00..5564747.20 rows=99995720 width=29)',)
('                                                                    ->  Parallel Hash  (cost=104050.13..104050.13 rows=117850 width=4)',)
('                                                                          ->  Parallel Seq Scan on part  (cost=0.00..104050.13 rows=117850 width=4)',)
("                                                                                Filter: ((p_name)::text ~~ '%dim%'::text)",)
('                          ->  Hash  (cost=11.70..11.70 rows=170 width=108)',)
('                                ->  Seq Scan on nation  (cost=0.00..11.70 rows=170 width=108)',)
Thread 0 -> Explain plan for Query/10.sql:
('Limit  (cost=7740509.85..7740509.90 rows=20 width=279)',)
('  ->  Sort  (cost=7740509.85..7745885.55 rows=2150280 width=279)',)
("        Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC",)
('        ->  Finalize GroupAggregate  (cost=7373427.70..7683291.67 rows=2150280 width=279)',)
('              Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment',)
('              ->  Gather Merge  (cost=7373427.70..7616095.42 rows=1791900 width=279)',)
('                    Workers Planned: 2',)
('                    ->  Partial GroupAggregate  (cost=7372427.67..7408265.67 rows=895950 width=279)',)
('                          Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment',)
('                          ->  Sort  (cost=7372427.67..7374667.55 rows=895950 width=259)',)
('                                Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment',)
('                                ->  Hash Join  (cost=851500.43..7063356.31 rows=895950 width=259)',)
('                                      Hash Cond: (customer.c_nationkey = nation.n_nationkey)',)
('                                      ->  Parallel Hash Join  (cost=851486.60..7051023.18 rows=895950 width=159)',)
('                                            Hash Cond: (orders.o_custkey = customer.c_custkey)',)
('                                            ->  Parallel Hash Join  (cost=724123.63..6880966.25 rows=895950 width=16)',)
('                                                  Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                                                  ->  Parallel Seq Scan on lineitem  (cost=0.00..5814736.50 rows=24905600 width=16)',)
("                                                        Filter: (l_returnflag = 'R'::bpchar)",)
('                                                  ->  Parallel Hash  (cost=716745.60..716745.60 rows=449682 width=8)',)
('                                                        ->  Parallel Seq Scan on orders  (cost=0.00..716745.60 rows=449682 width=8)',)
("                                                              Filter: ((o_orderdate >= '1993-08-01'::date) AND (o_orderdate < '1993-11-01 00:00:00'::timestamp without time zone))",)
('                                            ->  Parallel Hash  (cost=84889.77..84889.77 rows=1249777 width=147)',)
('                                                  ->  Parallel Seq Scan on customer  (cost=0.00..84889.77 rows=1249777 width=147)',)
('                                      ->  Hash  (cost=11.70..11.70 rows=170 width=108)',)
('                                            ->  Seq Scan on nation  (cost=0.00..11.70 rows=170 width=108)',)
Thread 0 -> Explain plan for Query/11.sql:
('Sort  (cost=919186.03..919260.04 rows=29605 width=36)',)
('  Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC',)
('  InitPlan 1 (returns $1)',)
('    ->  Finalize Aggregate  (cost=451550.94..451550.95 rows=1 width=32)',)
('          ->  Gather  (cost=451550.71..451550.92 rows=2 width=32)',)
('                Workers Planned: 2',)
('                ->  Partial Aggregate  (cost=450550.71..450550.72 rows=1 width=32)',)
('                      ->  Parallel Hash Join  (cost=5651.99..450273.17 rows=37006 width=10)',)
('                            Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)',)
('                            ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..419462.58 rows=6667858 width=14)',)
('                            ->  Parallel Hash  (cost=5645.87..5645.87 rows=490 width=4)',)
('                                  ->  Hash Join  (cost=12.14..5645.87 rows=490 width=4)',)
('                                        Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)',)
('                                        ->  Parallel Seq Scan on supplier supplier_1  (cost=0.00..5316.33 rows=83333 width=8)',)
('                                        ->  Hash  (cost=12.13..12.13 rows=1 width=4)',)
('                                              ->  Seq Scan on nation nation_1  (cost=0.00..12.13 rows=1 width=4)',)
("                                                    Filter: (n_name = 'MOZAMBIQUE'::bpchar)",)
('  ->  Finalize GroupAggregate  (cost=454081.11..465436.38 rows=29605 width=36)',)
('        Group Key: partsupp.ps_partkey',)
('        Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)',)
('        ->  Gather Merge  (cost=454081.11..463549.08 rows=74012 width=36)',)
('              Workers Planned: 2',)
('              ->  Partial GroupAggregate  (cost=453081.08..454006.23 rows=37006 width=36)',)
('                    Group Key: partsupp.ps_partkey',)
('                    ->  Sort  (cost=453081.08..453173.60 rows=37006 width=14)',)
('                          Sort Key: partsupp.ps_partkey',)
('                          ->  Parallel Hash Join  (cost=5651.99..450273.17 rows=37006 width=14)',)
('                                Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)',)
('                                ->  Parallel Seq Scan on partsupp  (cost=0.00..419462.58 rows=6667858 width=18)',)
('                                ->  Parallel Hash  (cost=5645.87..5645.87 rows=490 width=4)',)
('                                      ->  Hash Join  (cost=12.14..5645.87 rows=490 width=4)',)
('                                            Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                                            ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=8)',)
('                                            ->  Hash  (cost=12.13..12.13 rows=1 width=4)',)
('                                                  ->  Seq Scan on nation  (cost=0.00..12.13 rows=1 width=4)',)
("                                                        Filter: (n_name = 'MOZAMBIQUE'::bpchar)",)
Thread 0 -> Explain plan for Query/12.sql:
('Finalize GroupAggregate  (cost=7843610.80..7853018.28 rows=7 width=27)',)
('  Group Key: lineitem.l_shipmode',)
('  ->  Gather Merge  (cost=7843610.80..7853018.11 rows=14 width=27)',)
('        Workers Planned: 2',)
('        ->  Partial GroupAggregate  (cost=7842610.78..7852016.47 rows=7 width=27)',)
('              Group Key: lineitem.l_shipmode',)
('              ->  Sort  (cost=7842610.78..7843786.48 rows=470281 width=27)',)
('                    Sort Key: lineitem.l_shipmode',)
('                    ->  Parallel Hash Join  (cost=883741.40..7787050.37 rows=470281 width=27)',)
('                          Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                          ->  Parallel Seq Scan on lineitem  (cost=0.00..6814693.70 rows=470281 width=15)',)
("                                Filter: ((l_shipmode = ANY ('{RAIL,FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1997-01-01'::date) AND (l_receiptdate < '1998-01-01 00:00:00'::timestamp without time zone))",)
('                          ->  Parallel Hash  (cost=654244.40..654244.40 rows=12500240 width=20)',)
('                                ->  Parallel Seq Scan on orders  (cost=0.00..654244.40 rows=12500240 width=20)',)
Thread 0 -> Explain plan for Query/13.sql:
('Sort  (cost=3057476.22..3057476.72 rows=200 width=16)',)
('  Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC',)
('  ->  HashAggregate  (cost=3057466.57..3057468.57 rows=200 width=16)',)
('        Group Key: count(orders.o_orderkey)',)
('        ->  Finalize HashAggregate  (cost=2923896.69..3012474.61 rows=2999464 width=12)',)
('              Group Key: customer.c_custkey',)
('              Planned Partitions: 128',)
('              ->  Gather  (cost=1812054.57..2539590.37 rows=5998928 width=12)',)
('                    Workers Planned: 2',)
('                    ->  Partial HashAggregate  (cost=1811054.57..1938697.57 rows=2999464 width=12)',)
('                          Group Key: customer.c_custkey',)
('                          Planned Partitions: 128',)
('                          ->  Parallel Hash Left Join  (cost=890557.38..1107986.38 rows=12498990 width=8)',)
('                                Hash Cond: (customer.c_custkey = orders.o_custkey)',)
('                                ->  Parallel Seq Scan on customer  (cost=0.00..84889.77 rows=1249777 width=4)',)
('                                ->  Parallel Hash  (cost=685495.00..685495.00 rows=12498990 width=8)',)
('                                      ->  Parallel Seq Scan on orders  (cost=0.00..685495.00 rows=12498990 width=8)',)
("                                            Filter: ((o_comment)::text !~~ '%pending%deposits%'::text)",)
Thread 0 -> Explain plan for Query/14.sql:
('Finalize Aggregate  (cost=6256378.24..6256378.26 rows=1 width=32)',)
('  ->  Gather  (cost=6256378.01..6256378.22 rows=2 width=64)',)
('        Workers Planned: 2',)
('        ->  Partial Aggregate  (cost=6255378.01..6255378.02 rows=1 width=64)',)
('              ->  Parallel Hash Join  (cost=132111.42..6232731.62 rows=1294079 width=33)',)
('                    Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('                    ->  Parallel Seq Scan on lineitem  (cost=0.00..6064725.80 rows=1294079 width=16)',)
("                          Filter: ((l_shipdate >= '1996-12-01'::date) AND (l_shipdate < '1997-01-01 00:00:00'::timestamp without time zone))",)
('                    ->  Parallel Hash  (cost=99883.30..99883.30 rows=1666730 width=25)',)
('                          ->  Parallel Seq Scan on part  (cost=0.00..99883.30 rows=1666730 width=25)',)
Thread 0 -> Explain plan for Query/16.sql:
('Sort  (cost=852891.20..853345.36 rows=181664 width=44)',)
('  Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size',)
('  ->  GroupAggregate  (cost=677728.75..831432.52 rows=181664 width=44)',)
('        Group Key: part.p_brand, part.p_type, part.p_size',)
('        ->  Gather Merge  (cost=677728.75..817605.81 rows=1201007 width=40)',)
('              Workers Planned: 2',)
('              ->  Sort  (cost=676728.73..677979.78 rows=500420 width=40)',)
('                    Sort Key: part.p_brand, part.p_type, part.p_size',)
('                    ->  Parallel Hash Join  (cost=136949.49..615672.02 rows=500420 width=40)',)
('                          Hash Cond: (partsupp.ps_partkey = part.p_partkey)',)
('                          ->  Parallel Seq Scan on partsupp  (cost=6983.05..443115.27 rows=3333929 width=8)',)
('                                Filter: (NOT (hashed SubPlan 1))',)
('                                SubPlan 1',)
('                                  ->  Seq Scan on supplier  (cost=0.00..6983.00 rows=20 width=4)',)
("                                        Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)",)
('                          ->  Parallel Hash  (cost=124884.25..124884.25 rows=250175 width=40)',)
('                                ->  Parallel Seq Scan on part  (cost=0.00..124884.25 rows=250175 width=40)',)
("                                      Filter: ((p_brand <> 'Brand#34'::bpchar) AND ((p_type)::text !~~ 'LARGE BRUSHED%'::text) AND (p_size = ANY ('{48,19,12,4,41,7,21,39}'::integer[])))",)
Thread 0 -> Explain plan for Query/17.sql:
('Aggregate  (cost=1848962611683.72..1848962611683.73 rows=1 width=32)',)
('  ->  Hash Join  (cost=109675.27..1848962611480.04 rows=81473 width=8)',)
('        Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('        Join Filter: (lineitem.l_quantity < (SubPlan 1))',)
('        ->  Seq Scan on lineitem  (cost=0.00..6964687.28 rows=239989728 width=17)',)
('        ->  Hash  (cost=109624.35..109624.35 rows=4074 width=4)',)
('              ->  Gather  (cost=1000.00..109624.35 rows=4074 width=4)',)
('                    Workers Planned: 2',)
('                    ->  Parallel Seq Scan on part  (cost=0.00..108216.95 rows=1698 width=4)',)
("                          Filter: ((p_brand = 'Brand#44'::bpchar) AND (p_container = 'WRAP PKG'::bpchar))",)
('        SubPlan 1',)
('          ->  Aggregate  (cost=7564661.78..7564661.79 rows=1 width=32)',)
('                ->  Seq Scan on lineitem lineitem_1  (cost=0.00..7564661.60 rows=69 width=5)',)
('                      Filter: (l_partkey = part.p_partkey)',)
Thread 0 -> Explain plan for Query/18.sql:
('Limit  (cost=24942837.41..24942840.41 rows=100 width=71)',)
('  ->  GroupAggregate  (cost=24942837.41..24974688.71 rows=1061710 width=71)',)
('        Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey',)
('        ->  Sort  (cost=24942837.41..24945491.68 rows=1061710 width=44)',)
('              Sort Key: orders.o_totalprice DESC, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey',)
('              ->  Hash Join  (cost=14551164.21..24771247.07 rows=1061710 width=44)',)
('                    Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)',)
('                    ->  Seq Scan on lineitem  (cost=0.00..6964687.28 rows=239989728 width=9)',)
('                    ->  Hash  (cost=14548338.19..14548338.19 rows=132722 width=43)',)
('                          ->  Hash Join  (cost=13266962.17..14548338.19 rows=132722 width=43)',)
('                                Hash Cond: (orders.o_custkey = customer.c_custkey)',)
('                                ->  Hash Join  (cost=13109507.23..14369595.52 rows=132722 width=24)',)
('                                      Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)',)
('                                      ->  Seq Scan on orders  (cost=0.00..829247.76 rows=30000576 width=20)',)
('                                      ->  Hash  (cost=13107329.21..13107329.21 rows=132722 width=4)',)
('                                            ->  Finalize GroupAggregate  (cost=13001144.86..13106001.99 rows=132722 width=4)',)
('                                                  Group Key: lineitem_1.l_orderkey',)
("                                                  Filter: (sum(lineitem_1.l_quantity) > '314'::numeric)",)
('                                                  ->  Gather Merge  (cost=13001144.86..13094056.98 rows=796334 width=36)',)
('                                                        Workers Planned: 2',)
('                                                        ->  Sort  (cost=13000144.83..13001140.25 rows=398167 width=36)',)
('                                                              Sort Key: lineitem_1.l_orderkey',)
('                                                              ->  Partial HashAggregate  (cost=11970723.01..12952220.80 rows=398167 width=36)',)
('                                                                    Group Key: lineitem_1.l_orderkey',)
('                                                                    Planned Partitions: 32',)
('                                                                    ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..5564747.20 rows=99995720 width=9)',)
('                                ->  Hash  (cost=102386.64..102386.64 rows=2999464 width=23)',)
('                                      ->  Seq Scan on customer  (cost=0.00..102386.64 rows=2999464 width=23)',)
Thread 0 -> Explain plan for Query/19.sql:
('Finalize Aggregate  (cost=7727014.00..7727014.01 rows=1 width=32)',)
('  ->  Gather  (cost=7727013.78..7727013.99 rows=2 width=32)',)
('        Workers Planned: 2',)
('        ->  Partial Aggregate  (cost=7726013.78..7726013.79 rows=1 width=32)',)
('              ->  Parallel Hash Join  (cost=154103.46..7725998.98 rows=1973 width=12)',)
('                    Hash Cond: (lineitem.l_partkey = part.p_partkey)',)
('                    Join Filter: (((part.p_brand = \'Brand#52\'::bpchar) AND (part.p_container = ANY (\'{"SM CASE","SM BOX","SM PACK","SM PKG"}\'::bpchar[])) AND (lineitem.l_quantity >= \'4\'::numeric) AND (lineitem.l_quantity <= \'14\'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = \'Brand#11\'::bpchar) AND (part.p_container = ANY (\'{"MED BAG","MED BOX","MED PKG","MED PACK"}\'::bpchar[])) AND (lineitem.l_quantity >= \'18\'::numeric) AND (lineitem.l_quantity <= \'28\'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = \'Brand#51\'::bpchar) AND (part.p_container = ANY (\'{"LG CASE","LG BOX","LG PACK","LG PKG"}\'::bpchar[])) AND (lineitem.l_quantity >= \'29\'::numeric) AND (lineitem.l_quantity <= \'39\'::numeric) AND (part.p_size <= 15)))',)
('                    ->  Parallel Seq Scan on lineitem  (cost=0.00..7564661.60 rows=1900370 width=21)',)
('                          Filter: ((l_shipmode = ANY (\'{AIR,"AIR REG"}\'::bpchar[])) AND (l_shipinstruct = \'DELIVER IN PERSON\'::bpchar) AND (((l_quantity >= \'4\'::numeric) AND (l_quantity <= \'14\'::numeric)) OR ((l_quantity >= \'18\'::numeric) AND (l_quantity <= \'28\'::numeric)) OR ((l_quantity >= \'29\'::numeric) AND (l_quantity <= \'39\'::numeric))))',)
('                    ->  Parallel Hash  (cost=154052.03..154052.03 rows=4115 width=30)',)
('                          ->  Parallel Seq Scan on part  (cost=0.00..154052.03 rows=4115 width=30)',)
('                                Filter: ((p_size >= 1) AND (((p_brand = \'Brand#52\'::bpchar) AND (p_container = ANY (\'{"SM CASE","SM BOX","SM PACK","SM PKG"}\'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = \'Brand#11\'::bpchar) AND (p_container = ANY (\'{"MED BAG","MED BOX","MED PKG","MED PACK"}\'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = \'Brand#51\'::bpchar) AND (p_container = ANY (\'{"LG CASE","LG BOX","LG PACK","LG PKG"}\'::bpchar[])) AND (p_size <= 15))))',)
Thread 0 -> Explain plan for Query/20.sql:
('Nested Loop Semi Join  (cost=7667.79..149863351939560.72 rows=299 width=52)',)
('  Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)',)
('  ->  Gather Merge  (cost=6667.79..6804.75 rows=1176 width=56)',)
('        Workers Planned: 2',)
('        ->  Sort  (cost=5667.76..5668.99 rows=490 width=56)',)
('              Sort Key: supplier.s_name',)
('              ->  Hash Join  (cost=12.14..5645.87 rows=490 width=56)',)
('                    Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                    ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=60)',)
('                    ->  Hash  (cost=12.13..12.13 rows=1 width=4)',)
('                          ->  Seq Scan on nation  (cost=0.00..12.13 rows=1 width=4)',)
("                                Filter: (n_name = 'ALGERIA'::bpchar)",)
('  ->  Materialize  (cost=1000.00..149863350982412.19 rows=53882 width=4)',)
('        ->  Nested Loop Semi Join  (cost=1000.00..149863350982142.78 rows=53882 width=4)',)
('              Join Filter: (partsupp.ps_partkey = part.p_partkey)',)
('              ->  Seq Scan on partsupp  (cost=0.00..149860117815549.34 rows=5334286 width=8)',)
('                    Filter: ((ps_availqty)::numeric > (SubPlan 1))',)
('                    SubPlan 1',)
('                      ->  Aggregate  (cost=9364584.56..9364584.58 rows=1 width=32)',)
('                            ->  Seq Scan on lineitem  (cost=0.00..9364584.56 rows=1 width=5)',)
("                                  Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))",)
('              ->  Materialize  (cost=1000.00..109292.76 rows=40406 width=4)',)
('                    ->  Gather  (cost=1000.00..109090.73 rows=40406 width=4)',)
('                          Workers Planned: 2',)
('                          ->  Parallel Seq Scan on part  (cost=0.00..104050.13 rows=16836 width=4)',)
("                                Filter: ((p_name)::text ~~ 'green%'::text)",)
Thread 0 -> Explain plan for Query/21.sql:
('Limit  (cost=20127999.88..20127999.88 rows=1 width=34)',)
('  ->  Sort  (cost=20127999.88..20127999.88 rows=1 width=34)',)
('        Sort Key: (count(*)) DESC, supplier.s_name',)
('        ->  GroupAggregate  (cost=20127999.85..20127999.87 rows=1 width=34)',)
('              Group Key: supplier.s_name',)
('              ->  Sort  (cost=20127999.85..20127999.85 rows=1 width=26)',)
('                    Sort Key: supplier.s_name',)
('                    ->  Gather  (cost=19419648.04..20127999.84 rows=1 width=26)',)
('                          Workers Planned: 2',)
('                          ->  Parallel Hash Join  (cost=19418648.04..20126999.74 rows=1 width=26)',)
('                                Hash Cond: (orders.o_orderkey = l1.l_orderkey)',)
('                                ->  Parallel Seq Scan on orders  (cost=0.00..685495.00 rows=6095117 width=4)',)
("                                      Filter: (o_orderstatus = 'F'::bpchar)",)
('                                ->  Parallel Hash  (cost=19418648.03..19418648.03 rows=1 width=34)',)
('                                      ->  Nested Loop Semi Join  (cost=6367240.33..19418648.03 rows=1 width=34)',)
('                                            Join Filter: ((l2.l_suppkey <> l1.l_suppkey) AND (l1.l_orderkey = l2.l_orderkey))',)
('                                            ->  Parallel Hash Anti Join  (cost=6367240.33..12442035.46 rows=1 width=34)',)
('                                                  Hash Cond: (l1.l_orderkey = l3.l_orderkey)',)
('                                                  Join Filter: (l3.l_suppkey <> l1.l_suppkey)',)
('                                                  ->  Parallel Hash Join  (cost=5651.99..5946199.78 rows=196070 width=34)',)
('                                                        Hash Cond: (l1.l_suppkey = supplier.s_suppkey)',)
('                                                        ->  Parallel Seq Scan on lineitem l1  (cost=0.00..5814736.50 rows=33331907 width=8)',)
('                                                              Filter: (l_receiptdate > l_commitdate)',)
('                                                        ->  Parallel Hash  (cost=5645.87..5645.87 rows=490 width=30)',)
('                                                              ->  Hash Join  (cost=12.14..5645.87 rows=490 width=30)',)
('                                                                    Hash Cond: (supplier.s_nationkey = nation.n_nationkey)',)
('                                                                    ->  Parallel Seq Scan on supplier  (cost=0.00..5316.33 rows=83333 width=34)',)
('                                                                    ->  Hash  (cost=12.13..12.13 rows=1 width=4)',)
('                                                                          ->  Seq Scan on nation  (cost=0.00..12.13 rows=1 width=4)',)
("                                                                                Filter: (n_name = 'EGYPT'::bpchar)",)
('                                                  ->  Parallel Hash  (cost=5814736.50..5814736.50 rows=33331907 width=8)',)
('                                                        ->  Parallel Seq Scan on lineitem l3  (cost=0.00..5814736.50 rows=33331907 width=8)',)
('                                                              Filter: (l_receiptdate > l_commitdate)',)
('                                            ->  Seq Scan on lineitem l2  (cost=0.00..6964687.28 rows=239989728 width=8)',)
Thread 0 -> Explain plan for Query/22.sql:
('Finalize GroupAggregate  (cost=1121437.53..1123621.04 rows=16359 width=72)',)
('  Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))',)
('  InitPlan 1 (returns $1)',)
('    ->  Finalize Aggregate  (cost=106298.21..106298.22 rows=1 width=32)',)
('          ->  Gather  (cost=106297.99..106298.20 rows=2 width=32)',)
('                Workers Planned: 2',)
('                ->  Partial Aggregate  (cost=105297.99..105298.00 rows=1 width=32)',)
('                      ->  Parallel Seq Scan on customer customer_1  (cost=0.00..105198.64 rows=39738 width=6)',)
("                            Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{20,40,22,30,39,42,21}'::text[])))",)
('  ->  Gather Merge  (cost=1015139.31..1016900.22 rows=13632 width=72)',)
('        Workers Planned: 2',)
('        Params Evaluated: $1',)
('        ->  Partial GroupAggregate  (cost=1014139.29..1014326.73 rows=6816 width=72)',)
('              Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))',)
('              ->  Sort  (cost=1014139.29..1014156.33 rows=6816 width=38)',)
('                    Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))',)
('                    ->  Parallel Hash Anti Join  (cost=859327.40..1013705.29 rows=6816 width=38)',)
('                          Hash Cond: (customer.c_custkey = orders.o_custkey)',)
('                          ->  Parallel Seq Scan on customer  (cost=0.00..105198.64 rows=14581 width=26)',)
("                                Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{20,40,22,30,39,42,21}'::text[])))",)
('                          ->  Parallel Hash  (cost=654244.40..654244.40 rows=12500240 width=4)',)
('                                ->  Parallel Seq Scan on orders  (cost=0.00..654244.40 rows=12500240 width=4)',)
